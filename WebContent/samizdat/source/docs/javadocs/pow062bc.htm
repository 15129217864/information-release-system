<!-- Automatically generated with polardoc Version 1.0.7 on Fri Aug 23 12:32:12 PDT 2002 -->
<!-- com.jconfig.mac.AppFileOSX | Do not remove or edit this line! -->
<HTML>
<HEAD>
<TITLE>
  Class com.jconfig.mac.AppFileOSX
</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#0000FF" ALINK="#0000FF">
<BR>
<P>

<TABLE WIDTH="100%" BGCOLOR="#FFFFBB"><TR><TD WIDTH="100%">

<B>
<A HREF="../../../readme.html"><FONT SIZE="2">Main Page</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../../overview.html"><FONT SIZE="2">Cookbook/Overview</FONT></A>

&nbsp; &nbsp; <A HREF="../../../imagemeister.html"><FONT SIZE="2">ImageMeister</FONT></A>

&nbsp; &nbsp; <A HREF="../../../jcprops.html"><FONT SIZE="2">the jcprops file</FONT></A>

&nbsp; &nbsp; <A HREF="../../../licensing.html"><FONT SIZE="2">Licensing</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Binary Installation & Configuration</FONT></I><B> 
[
<A HREF="../../../wininfo.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../../../macinfo.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../../../nixinfo.html"><FONT SIZE="2">Nix</FONT></A> &middot;
<A HREF="../../../osxinfo.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../../../changes.html"><FONT SIZE="2">Changes</FONT></A>


<BR>
&nbsp; &nbsp; <A HREF="../../../docs/pak-76b1.htm"><FONT SIZE="2">Public API</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../readme.html"><FONT SIZE="2">Source Code Main Page</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Java</FONT></I><B> 
[
<A HREF="pak-76b1.htm"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="pak-bd9a.htm"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="pak-545a.htm"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="pak-c96f.htm"><FONT SIZE="2">Nix</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Native Code</FONT></I><B>
[
<A HREF="../cdocs/common/Common.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../cdocs/win/Windows.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../cdocs/mac/Mac.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../cdocs/nix/Linux.html"><FONT SIZE="2">Nix</FONT></A>
]

&nbsp; &nbsp; <A HREF="../manifest.html"><FONT SIZE="2">Manifest</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Native Code Overviews</FONT></I><B>
[
<A HREF="../commonnative.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../winnative.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macnative.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixnative.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../strings.html"><FONT SIZE="2">Strings</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Macros</FONT></I><B>
[
<A HREF="../macros.html"><FONT SIZE="2">General</FONT></A> &middot; 
<A HREF="../nativemacros.html"><FONT SIZE="2">Native Macros</FONT></A> 
]

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Walkthroughs</FONT></I><B> 
[
<A HREF="../overview_init.html"><FONT SIZE="2">Java only</FONT></A> &middot; 
<A HREF="../overview_monitors.html"><FONT SIZE="2">Java and native</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Building</FONT></I><B> 
[
<A HREF="../wininstall.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macinstall.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixinstall.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../osxinstall.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../distribution.html"><FONT SIZE="2">Distribution Issues</FONT></A>

<BR>

</TD></TR></TABLE>





<A NAME="_top_"></A>
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-545a.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<HR SIZE=1 ALIGN=left WIDTH="98%">
<B><FONT FACE="Arial,Helvetica" SIZE=+2>
     Class com.jconfig.mac.AppFileOSX
</FONT></B>
<PRE>
java.lang.Object
   |
   +----<A HREF="pow0208.htm">com.jconfig.mac.DiskFileMRJ</A>
           |
           +----com.jconfig.mac.AppFileOSX
</PRE>
<P><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Summary</B></FONT></TD> </TR> </TABLE>
<A NAME="_Summary_"></A>
<PRE>
class  <STRONG>AppFileOSX</STRONG>
     extends com.jconfig.mac.<A HREF="pow0208.htm">DiskFileMRJ</A>
     implements com.jconfig.<A HREF="pow0b796.htm">AppFile</A>, 
                com.jconfig.<A HREF="pow05cf3.htm">AppCommandWatcher</A>
{
          // Fields 10
     private boolean <A HREF="#bAlreadyRequestedFileTypes">bAlreadyRequestedFileTypes</A>;
     private static final String <A HREF="#copyrightString">copyrightString</A>;
     private int <A HREF="#creatorCode">creatorCode</A>;
     private FileType[] <A HREF="#fileTypes">fileTypes</A>;
     private Vector <A HREF="#instances">instances</A>;
     private static final int <A HREF="#kNumCommands">kNumCommands</A>;
     private int <A HREF="#minimumPartition">minimumPartition</A>;
     private int <A HREF="#preferredPartition">preferredPartition</A>;
     private int <A HREF="#sizeFlags">sizeFlags</A>;
     private AppCommand[] <A HREF="#theCommands">theCommands</A>;

          // Constructors 1
     <A HREF="#AppFileOSX(int, int, byte[], int)">AppFileOSX</A>(int, int, byte[], int) throws FileNotFoundException, DiskFileException;

          // Methods 15
     public void <A HREF="#dumpInfo(java.io.PrintStream, java.lang.String)">dumpInfo</A>(PrintStream, String);
     public String <A HREF="#executableTypeToString(int)">executableTypeToString</A>(int);
     public AppCommand[] <A HREF="#getAllCommands()">getAllCommands</A>();
     private String[] <A HREF="#getArgsFromCommand(com.jconfig.AppCommand)">getArgsFromCommand</A>(AppCommand);
     public AppCommand <A HREF="#getCommand(java.lang.String)">getCommand</A>(String);
     public int <A HREF="#getExecutableType()">getExecutableType</A>();
     public FileType[] <A HREF="#getFileTypes(int)">getFileTypes</A>(int);
     public IconBundle <A HREF="#getIconBundle(com.jconfig.FileType)">getIconBundle</A>(FileType);
     public AppProcess[] <A HREF="#getInstances()">getInstances</A>();
     public int <A HREF="#getMinimumPartition()">getMinimumPartition</A>();
     public int <A HREF="#getSizeFlags()">getSizeFlags</A>();
     public int <A HREF="#getSuggestedPartition()">getSuggestedPartition</A>();
     public AppProcess <A HREF="#performCommand(com.jconfig.AppCommand, int)">performCommand</A>(AppCommand, int);
     public boolean <A HREF="#watchPost(java.lang.Object, com.jconfig.AppCommand, int)">watchPost</A>(Object, AppCommand, int);
     public boolean <A HREF="#watchPre(java.lang.Object, com.jconfig.AppCommand, int)">watchPre</A>(Object, AppCommand, int);
}
</PRE>
<P>
<DL>
<P>
Represents a Mac application as stored on disk (not a running process.)
<P>
<DT><B>Author:</B>
<DD>
Copyright (c) 1997-2002 Samizdat Productions. All Rights Reserved.

</DL>
<P>
<BR><BR>
<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Fields</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="copyrightString"><FONT COLOR="#0000FF">&middot;</FONT> copyrightString</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static final String copyrightString
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="creatorCode"><FONT COLOR="#FF00FF">&middot;</FONT> creatorCode</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int creatorCode
</PRE>
<BLOCKQUOTE>
<P>
The creator code of this app.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="sizeFlags"><FONT COLOR="#FF00FF">&middot;</FONT> sizeFlags</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int sizeFlags
</PRE>
<BLOCKQUOTE>
<P>
The SIZE flags of this app. This value is read once, and then cached.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="minimumPartition"><FONT COLOR="#FF00FF">&middot;</FONT> minimumPartition</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int minimumPartition
</PRE>
<BLOCKQUOTE>
<P>
The minimum partition of this app. This value is read once, and then cached.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="preferredPartition"><FONT COLOR="#FF00FF">&middot;</FONT> preferredPartition</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int preferredPartition
</PRE>
<BLOCKQUOTE>
<P>
The preferred partition of this app. This value is read once, and then cached.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="fileTypes"><FONT COLOR="#FF00FF">&middot;</FONT> fileTypes</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private <A HREF="pow07264.htm">FileType</A>[] fileTypes
</PRE>
<BLOCKQUOTE>
<P>
The file types openable with this app. For instance, 'TEXT' is associated with SimpleText.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="instances"><FONT COLOR="#FF00FF">&middot;</FONT> instances</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private Vector instances
</PRE>
<BLOCKQUOTE>
<P>
Stores the processes created from this application.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="theCommands"><FONT COLOR="#FF00FF">&middot;</FONT> theCommands</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private <A HREF="pow0d54e.htm">AppCommand</A>[] theCommands
</PRE>
<BLOCKQUOTE>
<P>
The commands that can be sent to this app.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="bAlreadyRequestedFileTypes"><FONT COLOR="#FF00FF">&middot;</FONT> bAlreadyRequestedFileTypes</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private boolean bAlreadyRequestedFileTypes
</PRE>
<BLOCKQUOTE>
<P>
The file types of this app are lazily-created and then cached using this boolean.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kNumCommands"><FONT COLOR="#0000FF">&middot;</FONT> kNumCommands</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static final int kNumCommands
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<P>

<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Constructors</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="AppFileOSX"><FONT COLOR="#FFCC00">&middot;</FONT></A>
<A NAME="AppFileOSX(int, int, byte[], int)">AppFileOSX</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   AppFileOSX(int vRef, 
              int parID, 
              byte[] pName, 
              int category)  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Create from an FSSpec
The app must have type either 'APPL' or 'APPE'.
The app is created with three default commands: open app, open doc, and print doc.
The SIZE flags and partition values are read and cached.
The file types openable by this app are not read here; they will only be read if the getFileTypes() method is called.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> vRef</I></TD> <TD>the vRefNum of the app's file</TD></TR>
<TR VALIGN=TOP> <TD><I> parID</I></TD> <TD>the parID of the app's file</TD></TR>
<TR VALIGN=TOP> <TD><I> pName</I></TD> <TD>the name of the app's file, as a Pascal string</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>


<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Methods</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getIconBundle"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getIconBundle(com.jconfig.FileType)">getIconBundle</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow0326d.htm">IconBundle</A> getIconBundle(<A HREF="pow07264.htm">FileType</A> fileType) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the icons associated with the given file types.
For instance, photoshop has different icons for PICT and JPEG files.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getIconBundle(com.jconfig.FileType)">getIconBundle</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileTypes"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFileTypes(int)">getFileTypes</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow07264.htm">FileType</A>[] getFileTypes(int maxToReturn) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the file types openable by this app, creating them if this method has not been previously called.
These file types will be cached for future calls to this method.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getFileTypes(int)">getFileTypes</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getCommand"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getCommand(java.lang.String)">getCommand</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow0d54e.htm">AppCommand</A> getCommand(String commandName) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Search through our commands, and return a match if found.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getCommand(java.lang.String)">getCommand</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getAllCommands"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getAllCommands()">getAllCommands</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow0d54e.htm">AppCommand</A>[] getAllCommands() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns our three built-in commands.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getAllCommands()">getAllCommands</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="performCommand"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="performCommand(com.jconfig.AppCommand, int)">performCommand</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow04c9.htm">AppProcess</A> performCommand(<A HREF="pow0d54e.htm">AppCommand</A> command, 
                                    int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
If the command is one of our built-in types, launch the app using the command's arguments, if any.
If the app launched OK, create an AppProcessMRJ using the PSN of the process.
The  process will be added to our list of processes created from this app.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#performCommand(com.jconfig.AppCommand, int)">performCommand</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getInstances"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getInstances()">getInstances</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow04c9.htm">AppProcess</A>[] getInstances() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Return an array containing the processes created from this app.
Some of these processes may no longer be running.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getInstances()">getInstances</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getArgsFromCommand"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getArgsFromCommand(com.jconfig.AppCommand)">getArgsFromCommand</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private String[] getArgsFromCommand(<A HREF="pow0d54e.htm">AppCommand</A> command) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array of Strings created from the arguments to 'command'
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="watchPre"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="watchPre(java.lang.Object, com.jconfig.AppCommand, int)">watchPre</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public boolean watchPre(Object target, 
                           <A HREF="pow0d54e.htm">AppCommand</A> command, 
                           int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Part of the AppCommandWatcher interface. Always returns false.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow05cf3.htm#watchPre(java.lang.Object, com.jconfig.AppCommand, int)">watchPre</A> in interface <A HREF="pow05cf3.htm">AppCommandWatcher</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="watchPost"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="watchPost(java.lang.Object, com.jconfig.AppCommand, int)">watchPost</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public boolean watchPost(Object target, 
                            <A HREF="pow0d54e.htm">AppCommand</A> command, 
                            int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Part of the AppCommandWatcher interface. If the command is 'quit', removes the process from the list of processes.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow05cf3.htm#watchPost(java.lang.Object, com.jconfig.AppCommand, int)">watchPost</A> in interface <A HREF="pow05cf3.htm">AppCommandWatcher</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getExecutableType"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getExecutableType()">getExecutableType</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getExecutableType() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Currently, always returns AF_PEF.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getExecutableType()">getExecutableType</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getSizeFlags"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getSizeFlags()">getSizeFlags</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getSizeFlags() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the cached size flags.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getSizeFlags()">getSizeFlags</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMinimumPartition"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getMinimumPartition()">getMinimumPartition</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getMinimumPartition() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the cached minimum partition.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getMinimumPartition()">getMinimumPartition</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getSuggestedPartition"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getSuggestedPartition()">getSuggestedPartition</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getSuggestedPartition() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the cached suggested partition.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#getSuggestedPartition()">getSuggestedPartition</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="executableTypeToString"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="executableTypeToString(int)">executableTypeToString</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public String executableTypeToString(int f) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Convenience method which converts the return value of getExecutableType() into a string representation.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0b796.htm#executableTypeToString(int)">executableTypeToString</A> in interface <A HREF="pow0b796.htm">AppFile</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="dumpInfo"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="dumpInfo(java.io.PrintStream, java.lang.String)">dumpInfo</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public void dumpInfo(PrintStream ps, 
                        String indent) </PRE>
<BLOCKQUOTE>
<DL>
<DT><B>Overrides:</B>
<DD><A HREF="pow0208.htm#dumpInfo(java.io.PrintStream, java.lang.String)">dumpInfo</A> in class <A HREF="pow0208.htm">DiskFileMRJ</A>
</DL>
</BLOCKQUOTE> <BR>


<HR SIZE=1 ALIGN=left WIDTH="98%">
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-545a.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<FONT FACE="Arial,Helvetica" SIZE=-2>
Freshly brewed Java API Documentation automatically generated with <A HREF="http://www.ualberta.ca/~tgee/polardoc">polardoc</A> Version 1.0.7
<BR>
</FONT>
</BODY>
</HTML>
