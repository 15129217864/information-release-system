<!-- Automatically generated with polardoc Version 1.0.7 on Fri Aug 23 12:32:12 PDT 2002 -->
<!-- com.jconfig.FileRegistry | Do not remove or edit this line! -->
<HTML>
<HEAD>
<TITLE>
  Class com.jconfig.FileRegistry
</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#0000FF" ALINK="#0000FF">
<BR>
<P>

<TABLE WIDTH="100%" BGCOLOR="#FFFFBB"><TR><TD WIDTH="100%">

<B>
<A HREF="../../../readme.html"><FONT SIZE="2">Main Page</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../../overview.html"><FONT SIZE="2">Cookbook/Overview</FONT></A>

&nbsp; &nbsp; <A HREF="../../../imagemeister.html"><FONT SIZE="2">ImageMeister</FONT></A>

&nbsp; &nbsp; <A HREF="../../../jcprops.html"><FONT SIZE="2">the jcprops file</FONT></A>

&nbsp; &nbsp; <A HREF="../../../licensing.html"><FONT SIZE="2">Licensing</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Binary Installation & Configuration</FONT></I><B> 
[
<A HREF="../../../wininfo.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../../../macinfo.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../../../nixinfo.html"><FONT SIZE="2">Nix</FONT></A> &middot;
<A HREF="../../../osxinfo.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../../../changes.html"><FONT SIZE="2">Changes</FONT></A>


<BR>
&nbsp; &nbsp; <A HREF="../../../docs/pak-76b1.htm"><FONT SIZE="2">Public API</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../readme.html"><FONT SIZE="2">Source Code Main Page</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Java</FONT></I><B> 
[
<A HREF="pak-76b1.htm"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="pak-bd9a.htm"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="pak-545a.htm"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="pak-c96f.htm"><FONT SIZE="2">Nix</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Native Code</FONT></I><B>
[
<A HREF="../cdocs/common/Common.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../cdocs/win/Windows.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../cdocs/mac/Mac.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../cdocs/nix/Linux.html"><FONT SIZE="2">Nix</FONT></A>
]

&nbsp; &nbsp; <A HREF="../manifest.html"><FONT SIZE="2">Manifest</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Native Code Overviews</FONT></I><B>
[
<A HREF="../commonnative.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../winnative.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macnative.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixnative.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../strings.html"><FONT SIZE="2">Strings</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Macros</FONT></I><B>
[
<A HREF="../macros.html"><FONT SIZE="2">General</FONT></A> &middot; 
<A HREF="../nativemacros.html"><FONT SIZE="2">Native Macros</FONT></A> 
]

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Walkthroughs</FONT></I><B> 
[
<A HREF="../overview_init.html"><FONT SIZE="2">Java only</FONT></A> &middot; 
<A HREF="../overview_monitors.html"><FONT SIZE="2">Java and native</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Building</FONT></I><B> 
[
<A HREF="../wininstall.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macinstall.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixinstall.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../osxinstall.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../distribution.html"><FONT SIZE="2">Distribution Issues</FONT></A>

<BR>

</TD></TR></TABLE>





<A NAME="_top_"></A>
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-76b1.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<HR SIZE=1 ALIGN=left WIDTH="98%">
<B><FONT FACE="Arial,Helvetica" SIZE=+2>
     Class com.jconfig.FileRegistry
</FONT></B>
<PRE>
java.lang.Object
   |
   +----com.jconfig.FileRegistry
</PRE>
<P><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Summary</B></FONT></TD> </TR> </TABLE>
<A NAME="_Summary_"></A>
<PRE>
public class  <STRONG>FileRegistry</STRONG>
     extends java.lang.Object
{
          // Fields 16
     public static final int <A HREF="#ALIAS_NO_UI">ALIAS_NO_UI</A>;
     public static final int <A HREF="#ALIAS_UI">ALIAS_UI</A>;
     public static final int <A HREF="#APP_MOVE_MAXIMIZE">APP_MOVE_MAXIMIZE</A>;
     public static final int <A HREF="#APP_MOVE_MINIMIZE">APP_MOVE_MINIMIZE</A>;
     public static final int <A HREF="#APP_MOVE_TOBACK">APP_MOVE_TOBACK</A>;
     public static final int <A HREF="#APP_MOVE_TOFRONT">APP_MOVE_TOFRONT</A>;
     public static final int <A HREF="#GETAPPS_SEARCH1">GETAPPS_SEARCH1</A>;
     public static final int <A HREF="#GETAPPS_SEARCH2">GETAPPS_SEARCH2</A>;
     public static final int <A HREF="#GETAPPS_SEARCH3">GETAPPS_SEARCH3</A>;
     public static final int <A HREF="#GETPROCESSES_IGNORE_HIDDEN">GETPROCESSES_IGNORE_HIDDEN</A>;
     public static final int <A HREF="#GETPROCESSES_IGNORE_SYSTEM">GETPROCESSES_IGNORE_SYSTEM</A>;
     public static final int <A HREF="#INANDOUT_ONLY">INANDOUT_ONLY</A>;
     public static final int <A HREF="#IN_ONLY">IN_ONLY</A>;
     public static final int <A HREF="#OUT_ONLY">OUT_ONLY</A>;
     private static final String <A HREF="#copyrightString">copyrightString</A>;
     private static FileRegistryI <A HREF="#delegate">delegate</A>;

          // Constructors 1
     private <A HREF="#FileRegistry()">FileRegistry</A>();

          // Methods 24
     public static int <A HREF="#createAlias(com.jconfig.DiskObject, java.io.File, int, int)">createAlias</A>(DiskObject, File, int, int) throws FileNotFoundException, DiskFileException;
     public static AppFile <A HREF="#createAppFile(java.io.File)">createAppFile</A>(File) throws FileNotFoundException, DiskFileException;
     public static DiskObject <A HREF="#createDiskObject(java.io.File, int)">createDiskObject</A>(File, int) throws FileNotFoundException, DiskFileException;
     public static FileExtension[] <A HREF="#findExtensions(com.jconfig.FinderInfo, int)">findExtensions</A>(FinderInfo, int);
     public static FinderInfo[] <A HREF="#findFinderInfo(com.jconfig.FileExtension, int)">findFinderInfo</A>(FileExtension, int);
     public static AppFile[] <A HREF="#getApps(com.jconfig.FileExtension, int, int)">getApps</A>(FileExtension, int, int);
     public static AppFile[] <A HREF="#getApps(com.jconfig.FinderInfo, int, int)">getApps</A>(FinderInfo, int, int);
     public static AppFile[] <A HREF="#getApps(java.lang.String, int, int)">getApps</A>(String, int, int);
     public static FileRegistryI <A HREF="#getDelegate()">getDelegate</A>();
     public static int <A HREF="#getDirection()">getDirection</A>();
     public static FileSystem[] <A HREF="#getFileSystems(int, int)">getFileSystems</A>(int, int);
     public static FileType <A HREF="#getFileType(java.io.File)">getFileType</A>(File) throws FileNotFoundException, DiskFileException;
     public static Monitor <A HREF="#getMainMonitor()">getMainMonitor</A>();
     public static Monitor[] <A HREF="#getMonitors()">getMonitors</A>();
     public static PlatformInfoI <A HREF="#getPlatformInfo()">getPlatformInfo</A>();
     public static AppProcess[] <A HREF="#getProcesses(int, int)">getProcesses</A>(int, int);
     public static DiskVolume[] <A HREF="#getVolumes()">getVolumes</A>();
     public static void <A HREF="#initialize(java.io.File, int)">initialize</A>(File, int);
     public static boolean <A HREF="#isInited()">isInited</A>();
     public static int <A HREF="#iterate(com.jconfig.ConfigEntryVisitor)">iterate</A>(ConfigEntryVisitor);
     public static int <A HREF="#launchURL(java.lang.String, int, java.lang.String[])">launchURL</A>(String, int, String[]);
     public static DiskObject <A HREF="#resolveAlias(com.jconfig.DiskAlias, int)">resolveAlias</A>(DiskAlias, int) throws FileNotFoundException, DiskFileException;
     public static void <A HREF="#setDelegate(com.jconfig.FileRegistryI)">setDelegate</A>(FileRegistryI);
     public static void <A HREF="#setDirection(int)">setDirection</A>(int);

}
</PRE>
<P>
<DL>
<P>
This singleton returns the following information:
<BR>
	- the FileExtension's corresponding to a given FinderInfo
<BR>
	- the FinderInfo's corresponding to a given FileExtension
<BR>
	- applications whose name contain a given string
<BR>
	- applications associated with a given FileExtension
<BR>
	- applications associated with a given FinderInfo
<BR>
You can also use this object to:
<BR>
   - launch a URL or file in a Web browser
<BR>
   - create and resolve aliases
<BR>
   - create AppFile's and DiskObject's
<BR>

   - enumerate the currently mounted volumes

<BR>

   - enumerate the user's active video monitors

<BR>
   - iterate over each record used to build the mappings database which maps
FileExtension's to FinderInfo's and both of those to applications.
<BR>

Note: Before using any method of this class, you must call the initialize method, as illustrated
in the sample applications.
<P>
<DT><B>Author:</B>
<DD>
Copyright (c) 1997-2002 Samizdat Productions. All Rights Reserved.

</DL>
<P>
<BR><BR>
<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Fields</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="copyrightString"><FONT COLOR="#0000FF">&middot;</FONT> copyrightString</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static final String copyrightString
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="delegate"><FONT COLOR="#0000FF">&middot;</FONT> delegate</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static <A HREF="pow08d70.htm">FileRegistryI</A> delegate
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="IN_ONLY"><FONT COLOR="#0000FF">&middot;</FONT> IN_ONLY</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int IN_ONLY
</PRE>
<BLOCKQUOTE>
<P>
See the getDirection() method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="OUT_ONLY"><FONT COLOR="#0000FF">&middot;</FONT> OUT_ONLY</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int OUT_ONLY
</PRE>
<BLOCKQUOTE>
<P>
See the getDirection() method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="INANDOUT_ONLY"><FONT COLOR="#0000FF">&middot;</FONT> INANDOUT_ONLY</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int INANDOUT_ONLY
</PRE>
<BLOCKQUOTE>
<P>
See the getDirection() method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="APP_MOVE_TOFRONT"><FONT COLOR="#0000FF">&middot;</FONT> APP_MOVE_TOFRONT</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int APP_MOVE_TOFRONT
</PRE>
<BLOCKQUOTE>
<P>
See the launchURL method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="APP_MOVE_TOBACK"><FONT COLOR="#0000FF">&middot;</FONT> APP_MOVE_TOBACK</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int APP_MOVE_TOBACK
</PRE>
<BLOCKQUOTE>
<P>
See the launchURL method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="APP_MOVE_MINIMIZE"><FONT COLOR="#0000FF">&middot;</FONT> APP_MOVE_MINIMIZE</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int APP_MOVE_MINIMIZE
</PRE>
<BLOCKQUOTE>
<P>
See the launchURL method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="APP_MOVE_MAXIMIZE"><FONT COLOR="#0000FF">&middot;</FONT> APP_MOVE_MAXIMIZE</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int APP_MOVE_MAXIMIZE
</PRE>
<BLOCKQUOTE>
<P>
See the launchURL method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="ALIAS_NO_UI"><FONT COLOR="#0000FF">&middot;</FONT> ALIAS_NO_UI</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int ALIAS_NO_UI
</PRE>
<BLOCKQUOTE>
<P>
See the createDiskObject and resolveAlias methods.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="ALIAS_UI"><FONT COLOR="#0000FF">&middot;</FONT> ALIAS_UI</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int ALIAS_UI
</PRE>
<BLOCKQUOTE>
<P>
See the createDiskObject and resolveAlias methods.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="GETAPPS_SEARCH1"><FONT COLOR="#0000FF">&middot;</FONT> GETAPPS_SEARCH1</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int GETAPPS_SEARCH1
</PRE>
<BLOCKQUOTE>
<P>
See the getApps() methods.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="GETAPPS_SEARCH2"><FONT COLOR="#0000FF">&middot;</FONT> GETAPPS_SEARCH2</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int GETAPPS_SEARCH2
</PRE>
<BLOCKQUOTE>
<P>
See the getApps() methods.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="GETAPPS_SEARCH3"><FONT COLOR="#0000FF">&middot;</FONT> GETAPPS_SEARCH3</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int GETAPPS_SEARCH3
</PRE>
<BLOCKQUOTE>
<P>
See the getApps() methods.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="GETPROCESSES_IGNORE_SYSTEM"><FONT COLOR="#0000FF">&middot;</FONT> GETPROCESSES_IGNORE_SYSTEM</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int GETPROCESSES_IGNORE_SYSTEM
</PRE>
<BLOCKQUOTE>
<P>
See the getProcesses() methods.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="GETPROCESSES_IGNORE_HIDDEN"><FONT COLOR="#0000FF">&middot;</FONT> GETPROCESSES_IGNORE_HIDDEN</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int GETPROCESSES_IGNORE_HIDDEN
</PRE>
<BLOCKQUOTE>
<P>
See the getProcesses() methods.
<P>
<P> </BLOCKQUOTE>

<P>

<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Constructors</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="FileRegistry"><FONT COLOR="#FFCC00">&middot;</FONT></A>
<A NAME="FileRegistry()">FileRegistry</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private FileRegistry() </PRE>
<BLOCKQUOTE>
</BLOCKQUOTE> <BR>


<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Methods</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="initialize"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="initialize(java.io.File, int)">initialize</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static void initialize(File curDir, 
                                 int creator) </PRE>
<BLOCKQUOTE>
<DL>
<P>
This method must be called before using any other method of this class.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> curDir</I></TD> <TD>this must be the directory which contains the files 'jconfig.cfg' and 'jcfactrz.txt', both
of which are supplied with this distribution.

<BR>
<B>
IMPORTANT:
</B>
<BR>
If 'curDir' does not contain both 'jconfig.cfg' and 'jcfactrz.txt',
JConfig will not be properly initialized, and only a limited set
of functionality will be provided. In this case, JConfig will output a message saying that FileRegistryPlain
has been loaded. If this occurs, check that the 'curDir' directory contains both these files.

This directory must be writable; temporary files might be created in this directory.</TD></TR>
<TR VALIGN=TOP> <TD><I> creator</I></TD> <TD>the creator value of the application using this package.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setDelegate"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="setDelegate(com.jconfig.FileRegistryI)">setDelegate</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static void setDelegate(<A HREF="pow08d70.htm">FileRegistryI</A> fri) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Sets the object to which all other calls are delegated.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDelegate"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getDelegate()">getDelegate</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow08d70.htm">FileRegistryI</A> getDelegate() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the object to which all other calls are delegated.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="isInited"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="isInited()">isInited</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static boolean isInited() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns whether this class has been initialized. If initialization using the previous method
failed, false is returned.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getPlatformInfo"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getPlatformInfo()">getPlatformInfo</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0d946.htm">PlatformInfoI</A> getPlatformInfo() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Indicates which platform we're running on.
<P>
<DT> <B>Returns:</B>
<DD> a PlatformInfoI object containing information on the current platform/VM
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="findExtensions"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="findExtensions(com.jconfig.FinderInfo, int)">findExtensions</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0aba7.htm">FileExtension</A>[] findExtensions(<A HREF="pow07e8d.htm">FinderInfo</A> finfo, 
                                                int maxToReturn) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Return an array containing FileExtension objects which correspond to the given FinderInfo
object. The 'maxToReturn' argument is used as a hint only; the actual array size may be greater
or less than this. If no extensions were found, null is returned.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="findFinderInfo"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="findFinderInfo(com.jconfig.FileExtension, int)">findFinderInfo</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow07e8d.htm">FinderInfo</A>[] findFinderInfo(<A HREF="pow0aba7.htm">FileExtension</A> ext, 
                                             int maxToReturn) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Return an array containing FinderInfo objects which correspond to the given FileExtension
object. The 'maxToReturn' argument is used as a hint only; the actual array size may be greater
or less than this. If no FinderInfo objects were found, null is returned.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getApps"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getApps(java.lang.String, int, int)">getApps</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0b796.htm">AppFile</A>[] getApps(String appName, 
                                   int maxToReturn, 
                                   int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array of applications whose name contains the string 'appName'. Case is ignored;
whether the argument matches a whole word or not is ignored. If no applications are found,
null is returned.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> appName</I></TD> <TD>the string to search for.</TD></TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>indicates the maximum number of AppFiles to return. NOTE: this is used as
a hint only; the actual array size may be greater or less than this.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>the lower two bits of this int indicate the level of searching which should be
performed. 0 indicates only standard searching; the values 'GETAPPS_SEARCH1',
'GETAPPS_SEARCH2', and 'GETAPPS_SEARCH3' indicate increasing levels of searching
should be performed. The remaining bits of this int are reserved, and should be set to zero.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getApps"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getApps(com.jconfig.FinderInfo, int, int)">getApps</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0b796.htm">AppFile</A>[] getApps(<A HREF="pow07e8d.htm">FinderInfo</A> finfo, 
                                   int maxToReturn, 
                                   int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array of applications which are associated with the given FinderInfo object.

See the preceding method for details on the arguments.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getApps"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getApps(com.jconfig.FileExtension, int, int)">getApps</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0b796.htm">AppFile</A>[] getApps(<A HREF="pow0aba7.htm">FileExtension</A> ext, 
                                   int maxToReturn, 
                                   int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array of applications which are associated with the given FileExtension object.
See the preceding method for details on the arguments.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="iterate"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="iterate(com.jconfig.ConfigEntryVisitor)">iterate</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static int iterate(<A HREF="pow04405.htm">ConfigEntryVisitor</A> cev) </PRE>
<BLOCKQUOTE>
<DL>
<P>
For each entry in the mappings database, the 'visit()' method of the 'cev' argument is called.
Returns 0 if no error occured.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="launchURL"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="launchURL(java.lang.String, int, java.lang.String[])">launchURL</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static int launchURL(String url, 
                               int flags, 
                               String[] preferredBrowsers) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Launch the indicated URL. See the Internet Config documentation for more information.
Returns 0 if no error occured. 'url' must be a fully qualified URL in quoted-printable form.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>one of the following values: 0, APP_MOVE_TOFRONT, APP_MOVE_TOBACK, APP_MOVE_MINIMIZE, or APP_MOVE_MAXIMIZE</TD></TR>
<TR VALIGN=TOP> <TD><I> preferredBrowsers</I></TD> <TD>a list of the browsers which should be tried to use to open the

URL, in order of preference.

<BR>

On Mac, each String should be exactly four characters long, and represents a creator code, i.e.,

{ "MSIE", "MOS!" }. This argument will be ignored if Internet Config is installed and properly

configured, because Internet Config is given first chance to launch the URL in the user-specified

browser.

<BR>

On Windows, each String represents the name of a DDE server which will be searched for, i.e.,

{ "IEXPLORER", "NETSCAPE", "NSShell" }. This argument will be ignored if one of the indicated servers is not

running ( i.e., with the previous example, if both IE and Netscape aren't running, this argument

will be ignored. )

<BR>

This argument may be null.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumes"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getVolumes()">getVolumes</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0917b.htm">DiskVolume</A>[] getVolumes() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array containing the current disk volumes. Returns null if an error occurs.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="createAppFile"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="createAppFile(java.io.File)">createAppFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0b796.htm">AppFile</A> createAppFile(File fl)  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an AppFile created from a disk file. The file must exist, and be an application.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fl</I></TD> <TD>the file from which to create the object.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="createDiskObject"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="createDiskObject(java.io.File, int)">createDiskObject</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow087fb.htm">DiskObject</A> createDiskObject(File fl, 
                                             int flags)  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a DiskObject created from a java.io.File object. The returned DiskObject may
represent a file, a directory, a drive, or an alias.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fl</I></TD> <TD>the file from which to create the object.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>if this is 0, aliases will not be resolved. Otherwise, set this to ALIAS_UI
if interaction with the user is permissible, or to ALIAS_NO_UI if interaction with the
user is not permissible.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="createAlias"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="createAlias(com.jconfig.DiskObject, java.io.File, int, int)">createAlias</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static int createAlias(<A HREF="pow087fb.htm">DiskObject</A> target, 
                                 File newAlias, 
                                 int creator, 
                                 int flags)  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Creates an alias. Returns zero if no error occured, non-zero otherwise. Note that both files
must already exist; the newAlias argument will be overwritten with the new alias.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> target</I></TD> <TD>the target to which the alias will point</TD></TR>
<TR VALIGN=TOP> <TD><I> newAlias</I></TD> <TD>the new alias</TD></TR>
<TR VALIGN=TOP> <TD><I> creator</I></TD> <TD>reserved; set to zero</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>reserved; set to zero</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="resolveAlias"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="resolveAlias(com.jconfig.DiskAlias, int)">resolveAlias</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow087fb.htm">DiskObject</A> resolveAlias(<A HREF="pow09de4.htm">DiskAlias</A> da, 
                                         int flags)  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a DiskObject created from an alias. The returned DiskObject may be represent a file,
a directory, or a drive.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> da</I></TD> <TD>the alias from which to create the object.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>must be either ALIAS_UI if interaction with the user is permissible,
or ALIAS_NO_UI if interaction with the user is not permissible.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileType"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getFileType(java.io.File)">getFileType</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow07264.htm">FileType</A> getFileType(File fl)  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a FileType object representing the file type of a disk file. The file must exist.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fl</I></TD> <TD>the file</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDirection"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getDirection()">getDirection</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static int getDirection() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the direction flags. This is one of four values: 0, IN_ONLY, OUT_ONLY, and INANDOUT_ONLY; these correspond
to the check boxes in 'inbound only' and 'outbound only' in the dialog used to edit the Internet Config file
mapping database. The default value is 0: no flags are set.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setDirection"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="setDirection(int)">setDirection</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static void setDirection(int dir) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Sets the direction flags. See the getDirection() method.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMonitors"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getMonitors()">getMonitors</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0db22.htm">Monitor</A>[] getMonitors() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a list of all the video monitors which are currently active.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMainMonitor"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getMainMonitor()">getMainMonitor</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow0db22.htm">Monitor</A> getMainMonitor() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the main video monitor.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getProcesses"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getProcesses(int, int)">getProcesses</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow04c9.htm">AppProcess</A>[] getProcesses(int maxToReturn, 
                                           int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array of all the currently running processes, whether created using JConfig
or not.
Returns null if an error occurs.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>the maximum number of processes to return. This is a hint only.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>either 0, or GETPROCESSES_IGNORE_SYSTEM	and/or GETPROCESSES_IGNORE_HIDDEN</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileSystems"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getFileSystems(int, int)">getFileSystems</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static <A HREF="pow08d7c.htm">FileSystem</A>[] getFileSystems(int maxToReturn, 
                                             int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an array of all the currently mounted FileSystems. If this information cannot be determined,
returns null.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>the maximum number of file system to return. The actual number returned may be
more than this amount.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>reserved; set to zero</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>


<HR SIZE=1 ALIGN=left WIDTH="98%">
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-76b1.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<FONT FACE="Arial,Helvetica" SIZE=-2>
Freshly brewed Java API Documentation automatically generated with <A HREF="http://www.ualberta.ca/~tgee/polardoc">polardoc</A> Version 1.0.7
<BR>
</FONT>
</BODY>
</HTML>
