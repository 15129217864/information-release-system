/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.xct.cms.xy.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.xct.cms.xy.dao.ConnectionFactory;
import com.xct.cms.xy.dao.GetAllClinetDao;
import com.xct.cms.xy.domain.ClientIpAddress;
import com.xct.cms.xy.domain.ProjectMenuBean;

public class ReadysendAction extends Action {

	
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
        
		List <ClientIpAddress >iplist=new ArrayList<ClientIpAddress>();
	    Map<String,String>map=new HashMap<String, String>();
		
		String playname=request.getParameter("playname");
		String playtype=request.getParameter("playtype");
		
		String setstartdate=request.getParameter("startdate");
		String startdate=setstartdate+" "+request.getParameter("starttime");
		
		String setenddate=request.getParameter("enddate");
		String enddate=setenddate+" "+request.getParameter("endtime");
		
		String projectdirectory=request.getParameter("projectdirectory");
		String timecount=request.getParameter("timecount");
		String allip=request.getParameter("allips");
	
		GetAllClinetDao getallclinetdao=new GetAllClinetDao();
		Map<String,ClientIpAddress>ipmap=getallclinetdao.getAllIpAddress(1);
		
		String ip = "\\b((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\.((?!\\d\\d\\d)\\d+|1\\d\\d|2[0-4]\\d|25[0-5])\\b";
		Pattern macPattern = Pattern.compile(ip);
		Matcher macMatcher;
        String []iparray= allip.split(",");
        
        for(int i=0,n=iparray.length;i<n;i++){
        	macMatcher = macPattern.matcher(iparray[i]);
    		if (macMatcher.find()) {
//    			/////System.out.println("%%%%%%%%%%%%% "+iparray[i]);
    			if(null!=ipmap.get(macMatcher.group(0))){
    				String string=macMatcher.group(0);
    			    iplist.add(ipmap.get(string));
    			    map.put(string, string);
    			}
    		}
        }
        
		request.setAttribute("playname", playname);
		request.setAttribute("playtype", playtype);
		request.setAttribute("startdate", startdate);
		request.setAttribute("enddate", enddate);
		request.setAttribute("projectdirectory", projectdirectory);
		request.setAttribute("timecount", timecount);
		request.setAttribute("allip", iplist);
		request.setAttribute("ipcount", iplist.size());
//	    /////System.out.println("----------------------------------------------"+iplist.size());
		HttpSession session=request.getSession();
		session.setAttribute("projectmenu", new ProjectMenuBean(playname,playtype,setstartdate,startdate,enddate,setenddate,projectdirectory,timecount,iplist));
		
		return mapping.findForward("success");
	}
}