/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.xct.cms.upload.action;

import java.io.File;
import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.xct.cms.dao.LogsDAO;
import com.xct.cms.domin.Media;
import com.xct.cms.domin.Users;
import com.xct.cms.servlet.FirstStartServlet;
import com.xct.cms.utils.Util;
import com.xct.cms.utils.UtilDAO;

import ahxu.commons.upload.DiskFileUploadEx;

/**
 * MyEclipse Struts Creation date: 08-30-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action scope="request" validate="true"
 */
public class FileUploadAction extends Action {
	Logger logger = Logger.getLogger(FileUploadAction.class);

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {
		// TODO Auto-generated method stub
		request.setCharacterEncoding("gbk");
		response.setCharacterEncoding("gbk");
		List fileItemList = null;
		UtilDAO utildao = new UtilDAO();
		LogsDAO logsdao= new LogsDAO();
		Map<String ,Object> formmap= new HashMap<String ,Object>();
		

		String fileexts_video=",mpg,wmv,rm,avi,vob,mpa,asf,mov,rmvb,mpeg,mvb,tp,3gp,ts,mp4,asx,MPG,WMV,RM,AVI,VOB,MPA,ASF,MOV,RMVB,MPEG,MVB,TP,3GP,MP4,TS,ASX";
		String fileexts_img=",jpg,JPG,gif,GIF,bmp,BMP,png,PNG";
		String	fileexts_text=",txt,TXT";
		String	fileexts_sound=",mp3,wav,wma,MP3,WAV,WMA";
		String	fileexts_flash=",swf,SWF";
		String	fileexts_ppt=",ppt,PPT";
		String	fileexts_word=",doc,DOC";
		String	fileexts_excel=",xls,XLS";
		String	fileexts_web=",html,HMTL,htm,HTM";
		String filetype="未知";
		DiskFileUploadEx diskfile = new DiskFileUploadEx();// 初始化
		diskfile.setAllowField(true);   ////是否允许上载除file以外的field的内容
		try {
			fileItemList = diskfile.parseRequestEx(request);// 接收上传文件
			Iterator fileItemListIte = fileItemList.iterator();
			while (fileItemListIte.hasNext()) {
				FileItem file = (FileItem) fileItemListIte.next();
				if (!file.isFormField() && file.getSize() > 0) {
					UtilDAO.sleep(10);
					String TimeNum = UtilDAO.getNowtime("yyyyMMddHHmmssSSS");
					String filename = file.getName();
					
					///////System.out.println("filename==="+filename);
					if(filename.indexOf(".")!=-1){
						filetype=filename.substring(filename.lastIndexOf(".")+1);
					}
					///////System.out.println("filetype==="+filetype);
					String realfilename = TimeNum+"."+ filetype;
					String fieldName=file.getFieldName();
					long filezize=file.getSize();//文件大小
					Media newmedia= new Media(); 
					newmedia.setFile_name(realfilename);
					newmedia.setFile_size(filezize);
					String uploadPath = FirstStartServlet.projectpath;// 项目路径
					if(fileexts_img.indexOf(filetype)!=-1){  ///图片
						uploadPath=uploadPath+"mediafile\\img\\";
						newmedia.setFile_path("/mediafile/img/");
						newmedia.setMedia_type("IMAGE");
					}else if(fileexts_video.indexOf(filetype)!=-1){   //视频
						uploadPath=uploadPath+"mediafile\\video\\";
						newmedia.setFile_path("/mediafile/video/");
						newmedia.setMedia_type("MOVIE");
					}else if(fileexts_flash.indexOf(filetype)!=-1){ //FLASH
						uploadPath=uploadPath+"mediafile\\flash\\";
						newmedia.setFile_path("/mediafile/flash/");
						newmedia.setMedia_type("FLASH");
					}else if(fileexts_sound.indexOf(filetype)!=-1){ ///声音
						uploadPath=uploadPath+"mediafile\\sound\\";
						newmedia.setFile_path("/mediafile/sound/");
						newmedia.setMedia_type("SOUND");
					}else if(fileexts_ppt.indexOf(filetype)!=-1){ //PPT
						uploadPath=uploadPath+"mediafile\\office\\ppt\\";
						newmedia.setFile_path("/mediafile/office/ppt/");
						newmedia.setMedia_type("PPT");
					}else if(fileexts_word.indexOf(filetype)!=-1){ ///WORD
						uploadPath=uploadPath+"mediafile\\office\\word\\";
						newmedia.setFile_path("/mediafile/office/word/");
						newmedia.setMedia_type("WORD");
					}else if(fileexts_excel.indexOf(filetype)!=-1){ ///EXCEL
						uploadPath=uploadPath+"mediafile\\office\\excel\\";
						newmedia.setFile_path("/mediafile/office/excel/");
						newmedia.setMedia_type("EXCEL");
					}else if(fileexts_text.indexOf(filetype)!=-1){ ///TEXT
						uploadPath=uploadPath+"mediafile\\text\\";
						newmedia.setFile_path("/mediafile/text/");
						newmedia.setMedia_type("TEXT");
					}else if(fileexts_web.indexOf(filetype)!=-1){ ///WEB
						uploadPath=uploadPath+"mediafile\\web\\";
						newmedia.setFile_path("/mediafile/web/");
						newmedia.setMedia_type("WEB");
					}else{   ///未知文件
						uploadPath=uploadPath+"mediafile\\other\\";
						newmedia.setFile_path("/mediafile/other/");
						newmedia.setMedia_type("OTHER");
					}
					formmap.put(fieldName, newmedia);
					////////////////保存文件
					File filepath = new File(uploadPath);
					if (!filepath.exists()) {
						filepath.mkdir();
					}
					File savedFile = new File(uploadPath + realfilename);
					file.write(savedFile);// 保存图片到指定的目录下
					
						//////////////		/*********************生成缩略图
					if(fileexts_img.indexOf(filetype)!=-1){  ///图片
						boolean bool=UtilDAO.createThumbnailImg(uploadPath+realfilename,TimeNum);  ///生成图片文件缩略图
						if(bool){
							newmedia.setSlightly_img_name(TimeNum+"_slightly.jpg");
							newmedia.setSlightly_img_path("/mediafile/img/");
							newmedia.setSlightly_img_size(100);
						}else{
							newmedia.setSlightly_img_name("img_slightly.gif");
							newmedia.setSlightly_img_path("/mediafile/");
							newmedia.setSlightly_img_size(0);
						}
						
					}else if(fileexts_video.indexOf(filetype)!=-1){   //视频
						UtilDAO.createThumbnailVideo(uploadPath+realfilename,TimeNum);///生成视频文件缩略图
						if("rmvb".equals(filetype) || "RMVB".equals(filetype)|| "rm".equals(filetype)|| "RM".equals(filetype) ||"mvb".equals(filetype) ||"MVB".equals(filetype)){
							newmedia.setSlightly_img_name("video_slightly.gif");
							newmedia.setSlightly_img_path("/mediafile/");
							newmedia.setSlightly_img_size(0);
						}else{
							newmedia.setSlightly_img_name(TimeNum+"_slightly.jpg");
							newmedia.setSlightly_img_path("/mediafile/video/");
							newmedia.setSlightly_img_size(100);
						}
					}else if(fileexts_flash.indexOf(filetype)!=-1){ //FLASH
						newmedia.setSlightly_img_name("flash_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else if(fileexts_sound.indexOf(filetype)!=-1){ ///声音
						newmedia.setSlightly_img_name("sound_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else if(fileexts_ppt.indexOf(filetype)!=-1){ //PPT
						newmedia.setSlightly_img_name("ppt_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else if(fileexts_word.indexOf(filetype)!=-1){ ///WORD
						newmedia.setSlightly_img_name("word_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else if(fileexts_excel.indexOf(filetype)!=-1){ ///EXCEL
						newmedia.setSlightly_img_name("excel_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else if(fileexts_text.indexOf(filetype)!=-1){ ///TEXT
						newmedia.setSlightly_img_name("text_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else if(fileexts_web.indexOf(filetype)!=-1){ ///WEB
						newmedia.setSlightly_img_name("web_slightly.gif");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}else{   ///未知文件
						newmedia.setSlightly_img_name("no_img.jpg");
						newmedia.setSlightly_img_path("/mediafile/");
						newmedia.setSlightly_img_size(0);
						
					}
					
					
					
				}else{//////得到普通表单数据
					String fidilName=file.getFieldName();
					String content=file.getString();
					formmap.put(fidilName, UtilDAO.getGBK(content));
				}
			}
			Users user = (Users) request.getSession().getAttribute("lg_user");
			for(int i=1;i<6;i++){
				Media media= new Media(); 
					media.setMedia_title((String)formmap.get("title"+i));
					String groupid="".equals((String)formmap.get("group"+i))?"1":(String)formmap.get("group"+i);
					media.setZu_id((Integer.parseInt(groupid)));
					Object mmm=formmap.get("file"+i);
					if(mmm!=null&&!"".equals(mmm.toString())){
						Media media1=(Media)mmm;
						media.setFile_name(media1.getFile_name());
						media.setFile_path(media1.getFile_path());
						media.setFile_size(media1.getFile_size());
						media.setMedia_type(media1.getMedia_type());
						media.setSlightly_img_name(media1.getSlightly_img_name());
						media.setSlightly_img_path(media1.getSlightly_img_path());
						media.setSlightly_img_size(media1.getSlightly_img_size());
					}
					if(!"".equals(media.getMedia_title()) && !"".equals(media.getZu_id()) &&media.getFile_name()!=null ){
						
						int m_play_time=8000;
						if("IMAGE".equals(media.getMedia_type())){
							 m_play_time= 30000;
						}
						if("MOVIE".equals(media.getMedia_type())){
							 m_play_time= (int)Util.getMplayerLength(FirstStartServlet.projectpath+media.getFile_path()+media.getFile_name()) * 1000;
						}
						Map<String ,String> mediamap=UtilDAO.getMap();
						String nowtime1=UtilDAO.getNowtime("yyyy-MM-dd HH:mm:ss");
						String meidaid="media."+ UUID.randomUUID().toString();
						mediamap.put("media_id", meidaid);
						mediamap.put("media_title", media.getMedia_title());
						mediamap.put("media_type", media.getMedia_type());
						mediamap.put("zu_id", media.getZu_id()+"");
						mediamap.put("m_play_time", m_play_time+"");
						mediamap.put("file_name", media.getFile_name());
						mediamap.put("file_size", media.getFile_size()+"");
						mediamap.put("file_path", media.getFile_path());
						mediamap.put("slightly_img_name", media.getSlightly_img_name());
						mediamap.put("slightly_img_path", media.getSlightly_img_path());
						mediamap.put("slightly_img_size", media.getSlightly_img_size()+"");
						mediamap.put("create_date", nowtime1);
						mediamap.put("last_date", nowtime1);
						mediamap.put("userid", user.getLg_name());
						utildao.saveinfo(mediamap, "xct_media");
						logsdao.addlogs(user.getLg_name(), "<span>用户"+user.getLg_name()+"上传了"+media.getMedia_type()+"文件："+media.getMedia_title()+"</span>", 1);
				}
			}
		}catch(org.apache.commons.fileupload.FileUploadException e1){
			logger.info("上传文件失败！===》用户取消上传文件");
			e1.printStackTrace();
		}
		catch (Exception e) {
			logger.info("上传文件失败！===》" + e.getMessage());
			e.printStackTrace();
		} finally {
			UtilDAO.sleep(1000);
			diskfile.dispose();// 接收上传文件后的清理工作
		}

		return mapping.findForward("uploadfileOK");
	}
}