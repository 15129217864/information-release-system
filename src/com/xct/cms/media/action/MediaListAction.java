/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.xct.cms.media.action;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.xct.cms.dao.MediaDAO;
import com.xct.cms.dao.TerminalDAO;
import com.xct.cms.db.DBConnection;
import com.xct.cms.domin.Terminal;
import com.xct.cms.domin.Users;
import com.xct.cms.utils.PageDAO;
import com.xct.cms.utils.Pager;

/** 
 * MyEclipse Struts
 * Creation date: 08-29-2010
 * 
 * XDoclet definition:
 * @struts.action scope="request" validate="true"
 */
public class MediaListAction extends Action {
	/*
	 * Generated Methods
	 */

	/** f
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */ 
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String left_menu=request.getParameter("left_menu")==null?"":request.getParameter("left_menu");
		String zu_id=request.getParameter("zu_id")==null?"":request.getParameter("zu_id");
		String type=request.getParameter("type")==null?"":request.getParameter("type");
		MediaDAO mediadao = new MediaDAO();
		List list= new ArrayList();
//		根据<< and  xct_media.zu_id=no   order by id desc>>获取所有媒体库出错！=[Microsoft][SQLServer 2000 Driver for JDBC][SQLServer]列名 'no' 无效。

		if("MEDIA".equals(left_menu)){
			list=mediadao.getALLMediaDAO(" and media_type ='"+type+"'  and zu_name!='sys_text' order by group_num desc,media_title");
			
		}else if("TYPE_ZU".equals(left_menu)){
			if(!"".equals(zu_id)&&!"no".equals(zu_id)){
				DBConnection dbc= new DBConnection();
				Connection conn= dbc.getConection();
				TerminalDAO terdao= new TerminalDAO();
				List<Terminal> media_zulist=terdao.getAllZu(conn," where zu_type=1 order by zu_id");
				List<Terminal> sub_list=terdao.getzu_subListByzu_pth(media_zulist,Integer.parseInt(zu_id));
				String str="";
				for(int i=0;i<sub_list.size();i++){
					Terminal ter= sub_list.get(i);
					str+=" xct_media.zu_id='"+ter.getZu_id()+"' or";
				}
				list=mediadao.getALLMediaDAO(conn," and  ("+str.substring(0,str.length()-2)+")  and zu_name!='sys_text'  order by group_num desc,media_title");
				
				dbc.returnResources(conn);
			}
			
		}else if("TITLE_ASC".equals(left_menu)){
			list=mediadao.getALLMediaDAO("  and zu_name!='sys_text' order by media_title");
			
		}else if("TITLE_DESC".equals(left_menu)){
			list=mediadao.getALLMediaDAO("  and zu_name!='sys_text' order by media_title desc");
			
		}else{
			list=mediadao.getALLMediaDAO("  and zu_name!='sys_text' order by group_num desc,media_title");
		}
		if(list!=null&&list.size()>0){
			int pagenum =Integer.parseInt(request.getParameter("pagenum")==null?"1":request.getParameter("pagenum"));
			Pager pager= new Pager(list.size(),pagenum,20); 
			List list3= new PageDAO().getPageList(list, pager.getCurrentPage(), pager.getPageSize());
			request.setAttribute("pager", pager);
			request.setAttribute("medias", list3);
			request.setAttribute("media_sum", list.size());
		}
		request.setAttribute("left_menu", left_menu);
		request.setAttribute("zu_id", zu_id);
		request.setAttribute("type", type);
		
		return mapping.findForward("mediaList");
	}
}