<!-- Automatically generated with polardoc Version 1.0.7 on Fri Aug 23 12:32:12 PDT 2002 -->
<!-- com.jconfig.mac.ResFileMRJ | Do not remove or edit this line! -->
<HTML>
<HEAD>
<TITLE>
  Class com.jconfig.mac.ResFileMRJ
</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#0000FF" ALINK="#0000FF">
<BR>
<P>

<TABLE WIDTH="100%" BGCOLOR="#FFFFBB"><TR><TD WIDTH="100%">

<B>
<A HREF="../../../readme.html"><FONT SIZE="2">Main Page</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../../overview.html"><FONT SIZE="2">Cookbook/Overview</FONT></A>

&nbsp; &nbsp; <A HREF="../../../imagemeister.html"><FONT SIZE="2">ImageMeister</FONT></A>

&nbsp; &nbsp; <A HREF="../../../jcprops.html"><FONT SIZE="2">the jcprops file</FONT></A>

&nbsp; &nbsp; <A HREF="../../../licensing.html"><FONT SIZE="2">Licensing</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Binary Installation & Configuration</FONT></I><B> 
[
<A HREF="../../../wininfo.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../../../macinfo.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../../../nixinfo.html"><FONT SIZE="2">Nix</FONT></A> &middot;
<A HREF="../../../osxinfo.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../../../changes.html"><FONT SIZE="2">Changes</FONT></A>


<BR>
&nbsp; &nbsp; <A HREF="../../../docs/pak-76b1.htm"><FONT SIZE="2">Public API</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../readme.html"><FONT SIZE="2">Source Code Main Page</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Java</FONT></I><B> 
[
<A HREF="pak-76b1.htm"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="pak-bd9a.htm"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="pak-545a.htm"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="pak-c96f.htm"><FONT SIZE="2">Nix</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Native Code</FONT></I><B>
[
<A HREF="../cdocs/common/Common.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../cdocs/win/Windows.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../cdocs/mac/Mac.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../cdocs/nix/Linux.html"><FONT SIZE="2">Nix</FONT></A>
]

&nbsp; &nbsp; <A HREF="../manifest.html"><FONT SIZE="2">Manifest</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Native Code Overviews</FONT></I><B>
[
<A HREF="../commonnative.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../winnative.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macnative.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixnative.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../strings.html"><FONT SIZE="2">Strings</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Macros</FONT></I><B>
[
<A HREF="../macros.html"><FONT SIZE="2">General</FONT></A> &middot; 
<A HREF="../nativemacros.html"><FONT SIZE="2">Native Macros</FONT></A> 
]

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Walkthroughs</FONT></I><B> 
[
<A HREF="../overview_init.html"><FONT SIZE="2">Java only</FONT></A> &middot; 
<A HREF="../overview_monitors.html"><FONT SIZE="2">Java and native</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Building</FONT></I><B> 
[
<A HREF="../wininstall.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macinstall.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixinstall.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../osxinstall.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../distribution.html"><FONT SIZE="2">Distribution Issues</FONT></A>

<BR>

</TD></TR></TABLE>





<A NAME="_top_"></A>
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-545a.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<HR SIZE=1 ALIGN=left WIDTH="98%">
<B><FONT FACE="Arial,Helvetica" SIZE=+2>
     Class com.jconfig.mac.ResFileMRJ
</FONT></B>
<PRE>
java.lang.Object
   |
   +----com.jconfig.mac.ResFileMRJ
</PRE>
<P><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Summary</B></FONT></TD> </TR> </TABLE>
<A NAME="_Summary_"></A>
<PRE>
class  <STRONG>ResFileMRJ</STRONG>
     extends java.lang.Object
{
          // Fields 12
     public static final int <A HREF="#RESFORK_OPENEXISTING">RESFORK_OPENEXISTING</A>;
     public static final int <A HREF="#RESFORK_READONLY">RESFORK_READONLY</A>;
     private static final String <A HREF="#copyrightString">copyrightString</A>;
     private int <A HREF="#fileFD">fileFD</A>;
     public static final int <A HREF="#kResTypeSIZE">kResTypeSIZE</A>;
     public static final int <A HREF="#kResTypevers">kResTypevers</A>;
     private static IToolboxLock <A HREF="#lockObject">lockObject</A>;
     private int <A HREF="#mode">mode</A>;
     private byte[] <A HREF="#pName">pName</A>;
     private int <A HREF="#parID">parID</A>;
     private int <A HREF="#perms">perms</A>;
     private int <A HREF="#vRef">vRef</A>;

          // Constructors 1
     <A HREF="#ResFileMRJ(int, int, byte[], int, int)">ResFileMRJ</A>(int, int, byte[], int, int) throws IOException;

          // Methods 14
     private static void <A HREF="#call_nCloseResFile(int)">call_nCloseResFile</A>(int);
     private static int <A HREF="#call_nGetResource(int, int, int, byte[])">call_nGetResource</A>(int, int, int, byte[]);
     private static int <A HREF="#call_nGetResourceSize(int, int, int, int[])">call_nGetResourceSize</A>(int, int, int, int[]);
     private static int <A HREF="#call_nOpenExistingResFile(int, int, byte[])">call_nOpenExistingResFile</A>(int, int, byte[]);
     static IToolboxLock <A HREF="#getLockObject()">getLockObject</A>();
     private static native void <A HREF="#nCloseResFile(int)">nCloseResFile</A>(int);
     private static native int <A HREF="#nGetResource(int, int, int, byte[])">nGetResource</A>(int, int, int, byte[]);
     private static native int <A HREF="#nGetResourceSize(int, int, int, int[])">nGetResourceSize</A>(int, int, int, int[]);
     private static native int <A HREF="#nOpenExistingResFile(int, int, byte[])">nOpenExistingResFile</A>(int, int, byte[]);
     static void <A HREF="#setLockObject(com.jconfig.mac.IToolboxLock)">setLockObject</A>(IToolboxLock);
     static void <A HREF="#testLink()">testLink</A>();

     public void <A HREF="#close()">close</A>();
     public byte[] <A HREF="#getResource(int, int)">getResource</A>(int, int);
     public int <A HREF="#open()">open</A>();
}
</PRE>
<P>
<DL>
<P>
Used to read resources from files on Mac.
<P>
<DT><B>Author:</B>
<DD>
Copyright (c) 1997-2002 Samizdat Productions. All Rights Reserved.

</DL>
<P>
<BR><BR>
<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Fields</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="copyrightString"><FONT COLOR="#0000FF">&middot;</FONT> copyrightString</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static final String copyrightString
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="RESFORK_OPENEXISTING"><FONT COLOR="#0000FF">&middot;</FONT> RESFORK_OPENEXISTING</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int RESFORK_OPENEXISTING
</PRE>
<BLOCKQUOTE>
<P>
See the constructor
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="RESFORK_READONLY"><FONT COLOR="#0000FF">&middot;</FONT> RESFORK_READONLY</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int RESFORK_READONLY
</PRE>
<BLOCKQUOTE>
<P>
See the constructor
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kResTypevers"><FONT COLOR="#0000FF">&middot;</FONT> kResTypevers</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kResTypevers
</PRE>
<BLOCKQUOTE>
<P>
'vers'
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kResTypeSIZE"><FONT COLOR="#0000FF">&middot;</FONT> kResTypeSIZE</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kResTypeSIZE
</PRE>
<BLOCKQUOTE>
<P>
'SIZE'
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="fileFD"><FONT COLOR="#FF00FF">&middot;</FONT> fileFD</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int fileFD
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="vRef"><FONT COLOR="#FF00FF">&middot;</FONT> vRef</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int vRef
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="parID"><FONT COLOR="#FF00FF">&middot;</FONT> parID</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int parID
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="mode"><FONT COLOR="#FF00FF">&middot;</FONT> mode</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int mode
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="perms"><FONT COLOR="#FF00FF">&middot;</FONT> perms</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private int perms
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="pName"><FONT COLOR="#FF00FF">&middot;</FONT> pName</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private byte[] pName
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="lockObject"><FONT COLOR="#0000FF">&middot;</FONT> lockObject</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static <A HREF="pow0a704.htm">IToolboxLock</A> lockObject
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<P>

<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Constructors</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="ResFileMRJ"><FONT COLOR="#FFCC00">&middot;</FONT></A>
<A NAME="ResFileMRJ(int, int, byte[], int, int)">ResFileMRJ</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   ResFileMRJ(int vRef, 
              int parID, 
              byte[] pNm, 
              int mode, 
              int perms)  throws IOException</PRE>
<BLOCKQUOTE>
<DL>
<P>
Saves the values passed to this routine, but does not open the resource fork.
To open the resource fork, call the 'open' method.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> vRef</I></TD> <TD>the vRefNum of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> parID</I></TD> <TD>the parID of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> pName</I></TD> <TD>the name of the file, as a Pascal string</TD></TR>
<TR VALIGN=TOP> <TD><I> mode</I></TD> <TD>must be RESFORK_OPENEXISTING</TD></TR>
<TR VALIGN=TOP> <TD><I> perms</I></TD> <TD>must be RESFORK_READONLY</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>


<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Methods</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setLockObject"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="setLockObject(com.jconfig.mac.IToolboxLock)">setLockObject</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   static void setLockObject(<A HREF="pow0a704.htm">IToolboxLock</A> lock) </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getLockObject"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="getLockObject()">getLockObject</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   static <A HREF="pow0a704.htm">IToolboxLock</A> getLockObject() </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="open"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="open()">open</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int open() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Open the resource fork.
Returns -1 if an error occurs, ErrCodes.ERROR_NONE otherwise.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getResource"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getResource(int, int)">getResource</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public byte[] getResource(int resName, 
                             int resID) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Read a resource of the given type and id. Returns a byte array containing the data, or null if an error
occurs..
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="close"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="close()">close</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public void close() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Close the resource fork.
Call this after calling open().
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="call_nOpenExistingResFile"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="call_nOpenExistingResFile(int, int, byte[])">call_nOpenExistingResFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static int call_nOpenExistingResFile(int vRef, 
                                                int parID, 
                                                byte[] pName) </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="call_nCloseResFile"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="call_nCloseResFile(int)">call_nCloseResFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static void call_nCloseResFile(int fileFD) </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="call_nGetResourceSize"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="call_nGetResourceSize(int, int, int, int[])">call_nGetResourceSize</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static int call_nGetResourceSize(int fileFD, 
                                            int resName, 
                                            int resID, 
                                            int[] retSize) </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="call_nGetResource"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="call_nGetResource(int, int, int, byte[])">call_nGetResource</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static int call_nGetResource(int fileFD, 
                                        int resName, 
                                        int resID, 
                                        byte[] data) </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="nOpenExistingResFile"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="nOpenExistingResFile(int, int, byte[])">nOpenExistingResFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static native int nOpenExistingResFile(int vRef, 
                                                  int parID, 
                                                  byte[] pName) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Given an FSSpec, open the resource fork of an existing file. Returns the file ref num.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="nCloseResFile"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="nCloseResFile(int)">nCloseResFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static native void nCloseResFile(int fileFD) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Close a previously opened file.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="nGetResourceSize"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="nGetResourceSize(int, int, int, int[])">nGetResourceSize</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static native int nGetResourceSize(int fileFD, 
                                              int resName, 
                                              int resID, 
                                              int[] retSize) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Given a file ref num and a resource type and ID, return the resource's size.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="nGetResource"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="nGetResource(int, int, int, byte[])">nGetResource</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static native int nGetResource(int fileFD, 
                                          int resName, 
                                          int resID, 
                                          byte[] data) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Given a file ref num and a resource type and ID, return the resource data. 'data' must be
>= the size of the resource..
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="testLink"><FONT COLOR="#00DD00">&middot;</FONT></A>
<A NAME="testLink()">testLink</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   static void testLink() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls each of the native methods with invalid arguments. Used to test if there are link problems.
<P>
</DL>
</BLOCKQUOTE> <BR>


<HR SIZE=1 ALIGN=left WIDTH="98%">
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-545a.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<FONT FACE="Arial,Helvetica" SIZE=-2>
Freshly brewed Java API Documentation automatically generated with <A HREF="http://www.ualberta.ca/~tgee/polardoc">polardoc</A> Version 1.0.7
<BR>
</FONT>
</BODY>
</HTML>
