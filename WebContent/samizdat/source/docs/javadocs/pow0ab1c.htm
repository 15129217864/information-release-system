<!-- Automatically generated with polardoc Version 1.0.7 on Fri Aug 23 12:32:12 PDT 2002 -->
<!-- com.jconfig.win.DiskVolumeMSVM | Do not remove or edit this line! -->
<HTML>
<HEAD>
<TITLE>
  Class com.jconfig.win.DiskVolumeMSVM
</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#0000FF" ALINK="#0000FF">
<BR>
<P>

<TABLE WIDTH="100%" BGCOLOR="#FFFFBB"><TR><TD WIDTH="100%">

<B>
<A HREF="../../../readme.html"><FONT SIZE="2">Main Page</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../../overview.html"><FONT SIZE="2">Cookbook/Overview</FONT></A>

&nbsp; &nbsp; <A HREF="../../../imagemeister.html"><FONT SIZE="2">ImageMeister</FONT></A>

&nbsp; &nbsp; <A HREF="../../../jcprops.html"><FONT SIZE="2">the jcprops file</FONT></A>

&nbsp; &nbsp; <A HREF="../../../licensing.html"><FONT SIZE="2">Licensing</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Binary Installation & Configuration</FONT></I><B> 
[
<A HREF="../../../wininfo.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../../../macinfo.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../../../nixinfo.html"><FONT SIZE="2">Nix</FONT></A> &middot;
<A HREF="../../../osxinfo.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../../../changes.html"><FONT SIZE="2">Changes</FONT></A>


<BR>
&nbsp; &nbsp; <A HREF="../../../docs/pak-76b1.htm"><FONT SIZE="2">Public API</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../readme.html"><FONT SIZE="2">Source Code Main Page</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Java</FONT></I><B> 
[
<A HREF="pak-76b1.htm"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="pak-bd9a.htm"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="pak-545a.htm"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="pak-c96f.htm"><FONT SIZE="2">Nix</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Native Code</FONT></I><B>
[
<A HREF="../cdocs/common/Common.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../cdocs/win/Windows.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../cdocs/mac/Mac.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../cdocs/nix/Linux.html"><FONT SIZE="2">Nix</FONT></A>
]

&nbsp; &nbsp; <A HREF="../manifest.html"><FONT SIZE="2">Manifest</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Native Code Overviews</FONT></I><B>
[
<A HREF="../commonnative.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../winnative.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macnative.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixnative.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../strings.html"><FONT SIZE="2">Strings</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Macros</FONT></I><B>
[
<A HREF="../macros.html"><FONT SIZE="2">General</FONT></A> &middot; 
<A HREF="../nativemacros.html"><FONT SIZE="2">Native Macros</FONT></A> 
]

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Walkthroughs</FONT></I><B> 
[
<A HREF="../overview_init.html"><FONT SIZE="2">Java only</FONT></A> &middot; 
<A HREF="../overview_monitors.html"><FONT SIZE="2">Java and native</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Building</FONT></I><B> 
[
<A HREF="../wininstall.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macinstall.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixinstall.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../osxinstall.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../distribution.html"><FONT SIZE="2">Distribution Issues</FONT></A>

<BR>

</TD></TR></TABLE>





<A NAME="_top_"></A>
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-bd9a.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<HR SIZE=1 ALIGN=left WIDTH="98%">
<B><FONT FACE="Arial,Helvetica" SIZE=+2>
     Class com.jconfig.win.DiskVolumeMSVM
</FONT></B>
<PRE>
java.lang.Object
   |
   +----com.jconfig.win.DiskVolumeMSVM
</PRE>
<P><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Summary</B></FONT></TD> </TR> </TABLE>
<A NAME="_Summary_"></A>
<PRE>
class  <STRONG>DiskVolumeMSVM</STRONG>
     extends java.lang.Object
     implements com.jconfig.<A HREF="pow0917b.htm">DiskVolume</A>
{
          // Fields 2
     private static final String <A HREF="#copyrightString">copyrightString</A>;
     private String <A HREF="#driveName">driveName</A>;

          // Constructors 1
     <A HREF="#DiskVolumeMSVM(java.lang.String)">DiskVolumeMSVM</A>(String);

          // Methods 27
     public DiskObject <A HREF="#createObject(java.lang.String, int, int)">createObject</A>(String, int, int);
     private String <A HREF="#diskVolumeFlagsToString(int)">diskVolumeFlagsToString</A>(int);
     public void <A HREF="#dumpInfo(java.io.PrintStream, java.lang.String)">dumpInfo</A>(PrintStream, String);
     public boolean <A HREF="#exists()">exists</A>();
     public int <A HREF="#getColorCoding()">getColorCoding</A>();
     public DiskObject <A HREF="#getContainer()">getContainer</A>() throws FileNotFoundException, DiskFileException;
     public DateBundle <A HREF="#getDateBundle()">getDateBundle</A>();
     protected String <A HREF="#getDateString()">getDateString</A>();
     public String <A HREF="#getDisplayName()">getDisplayName</A>();
     String <A HREF="#getDriveName()">getDriveName</A>();
     public File <A HREF="#getFile()">getFile</A>();
     public FileSystem <A HREF="#getFileSystem()">getFileSystem</A>();
     public int <A HREF="#getFlags()">getFlags</A>();
     public long <A HREF="#getFreeSpace()">getFreeSpace</A>();
     public int <A HREF="#getGetFlagsMask()">getGetFlagsMask</A>();
     public IconBundle <A HREF="#getIconBundle()">getIconBundle</A>();
     public long <A HREF="#getMaxCapacity()">getMaxCapacity</A>();
     public int <A HREF="#getMaxFileNameLength()">getMaxFileNameLength</A>();
     public String <A HREF="#getName()">getName</A>();
     public String <A HREF="#getPrefix()">getPrefix</A>();
     public long <A HREF="#getReferenceNumber()">getReferenceNumber</A>();
     public int <A HREF="#getSetFlagsMask()">getSetFlagsMask</A>();
     public int <A HREF="#iterate(com.jconfig.DiskFilter, int, int)">iterate</A>(DiskFilter, int, int);
     public void <A HREF="#setDateBundle(com.jconfig.DateBundle)">setDateBundle</A>(DateBundle);
     public void <A HREF="#setFlags(int, int)">setFlags</A>(int, int);
     public int <A HREF="#setName(java.lang.String)">setName</A>(String);
     public int <A HREF="#updateContainer()">updateContainer</A>();
}
</PRE>
<P>
<DL>
<P>
Represents a DiskVolume on Windows.
<P>
<DT><B>Author:</B>
<DD>
Copyright (c) 1997-2002 Samizdat Productions. All Rights Reserved.

</DL>
<P>
<BR><BR>
<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Fields</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="copyrightString"><FONT COLOR="#0000FF">&middot;</FONT> copyrightString</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private static final String copyrightString
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="driveName"><FONT COLOR="#FF00FF">&middot;</FONT> driveName</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private String driveName
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<P>

<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Constructors</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="DiskVolumeMSVM"><FONT COLOR="#FFCC00">&middot;</FONT></A>
<A NAME="DiskVolumeMSVM(java.lang.String)">DiskVolumeMSVM</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   DiskVolumeMSVM(String s) </PRE>
<BLOCKQUOTE>
<DL>
<P>
's' is the drive name, i.e., 'c:\'
<P>
</DL>
</BLOCKQUOTE> <BR>


<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Methods</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileSystem"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFileSystem()">getFileSystem</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow08d7c.htm">FileSystem</A> getFileSystem() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the file system containing this object.
Calls FSCreatorMSVM.getVolumeFileSystem().
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getName()">getName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public String getName() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the volume label.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="setName(java.lang.String)">setName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int setName(String newLabel) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Sets the volume label.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDisplayName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getDisplayName()">getDisplayName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public String getDisplayName() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the name as it would be displayed to the user.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getPrefix"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getPrefix()">getPrefix</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public String getPrefix() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the drive name, e.g., "c:\"
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0917b.htm#getPrefix()">getPrefix</A> in interface <A HREF="pow0917b.htm">DiskVolume</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDriveName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getDriveName()">getDriveName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   String getDriveName() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the drive name, e.g., "c:\"
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="exists"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="exists()">exists</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public boolean exists() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Checks whether this volume is still mounted
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFlags"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFlags()">getFlags</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getFlags() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a set of binary flags associated with this object.
These flags are defined in DiskVolume.java.
Use the 'getGetFlagsMask' method to find out which bits of the returned value are significant.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getGetFlagsMask"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getGetFlagsMask()">getGetFlagsMask</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getGetFlagsMask() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a mask which indicates which bits returned by 'getFlags' are significant. For
instance, if bit 0 of the return value of this method is set, bit 0 of 'getFlags' contains
actual information, otherwise, this information is not available.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setFlags"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="setFlags(int, int)">setFlags</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public void setFlags(int whichFlags, 
                        int newValues) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Set the indicated flags.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> whichFlags</I></TD> <TD>the mask indicating which bits in newValues are significant</TD></TR>
<TR VALIGN=TOP> <TD><I> newValues</I></TD> <TD>contains the bits to be set/reset.</TD></TR>
</TABLE><P>
<DT> <B>Throws:</B> <A HREF="pow056b7.htm">UnimplementedException</A>
<DD> this method always throws an UnimplementedException
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getSetFlagsMask"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getSetFlagsMask()">getSetFlagsMask</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getSetFlagsMask() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a mask which indicates which bits in the argument to 'setFlags' can be set. For
instance, if bit 0 of the return value of this method is set, bit 0 of 'setFlags' can be set.
<P>
<DT> <B>Returns:</B>
<DD> currently, always returns 0
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDateBundle"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getDateBundle()">getDateBundle</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow0f908.htm">DateBundle</A> getDateBundle() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns a DateBundle containing the creation, modification, and backup dates of this volume.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setDateBundle"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="setDateBundle(com.jconfig.DateBundle)">setDateBundle</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public void setDateBundle(<A HREF="pow0f908.htm">DateBundle</A> newDates) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Sets the set of dates associated with this volume.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getColorCoding"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getColorCoding()">getColorCoding</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getColorCoding() </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFile"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFile()">getFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public File getFile() </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMaxFileNameLength"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getMaxFileNameLength()">getMaxFileNameLength</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int getMaxFileNameLength() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the maximum length of a file name component.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0917b.htm#getMaxFileNameLength()">getMaxFileNameLength</A> in interface <A HREF="pow0917b.htm">DiskVolume</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getReferenceNumber"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getReferenceNumber()">getReferenceNumber</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public long getReferenceNumber() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the volume serial number
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0917b.htm#getReferenceNumber()">getReferenceNumber</A> in interface <A HREF="pow0917b.htm">DiskVolume</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMaxCapacity"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getMaxCapacity()">getMaxCapacity</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public long getMaxCapacity() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the max bytes this volume can hold, or 0 if an error occurs.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0917b.htm#getMaxCapacity()">getMaxCapacity</A> in interface <A HREF="pow0917b.htm">DiskVolume</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFreeSpace"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFreeSpace()">getFreeSpace</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public long getFreeSpace() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the free space on this volume, or 0 if an error occurs.
<P>
<DT><B>Implements:</B>
<DD><A HREF="pow0917b.htm#getFreeSpace()">getFreeSpace</A> in interface <A HREF="pow0917b.htm">DiskVolume</A>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="updateContainer"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="updateContainer()">updateContainer</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int updateContainer() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Not yet implemented.
<P>
<DT> <B>Throws:</B> <A HREF="pow056b7.htm">UnimplementedException</A>
<DD> this method always throws an UnimplementedException
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getIconBundle"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getIconBundle()">getIconBundle</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow0326d.htm">IconBundle</A> getIconBundle() </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns an IconBundle for this volume.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="iterate"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="iterate(com.jconfig.DiskFilter, int, int)">iterate</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public int iterate(<A HREF="pow0cf1d.htm">DiskFilter</A> filter, 
                      int flags, 
                      int maxToIterate) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls the DiskFilter's visit() method with each file or folder at the top level of this volume.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getContainer"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getContainer()">getContainer</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow087fb.htm">DiskObject</A> getContainer()  throws FileNotFoundException, <A HREF="pow0f7dd.htm">DiskFileException</A></PRE>
<BLOCKQUOTE>
<DL>
<P>
Always returns null.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="createObject"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="createObject(java.lang.String, int, int)">createObject</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public <A HREF="pow087fb.htm">DiskObject</A> createObject(String name, 
                                  int type, 
                                  int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Used to create a file, folder or other object which will be contained by this DiskObject.
Returns the new DiskObject, or null if the object could not be created.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> name</I></TD> <TD>the name of the new object</TD></TR>
<TR VALIGN=TOP> <TD><I> type</I></TD> <TD>either 'DO_CREATEFILE' or 'DO_CREATEDIR'</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>reserved; set to 0</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="diskVolumeFlagsToString"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="diskVolumeFlagsToString(int)">diskVolumeFlagsToString</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   private String diskVolumeFlagsToString(int f) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Convenience method which converts a given set of DiskVolume flags into a string representation.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDateString"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getDateString()">getDateString</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   protected String getDateString() </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="dumpInfo"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="dumpInfo(java.io.PrintStream, java.lang.String)">dumpInfo</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public void dumpInfo(PrintStream ps, 
                        String indent) </PRE>
<BLOCKQUOTE>
<DL>
</DL>
</BLOCKQUOTE> <BR>


<HR SIZE=1 ALIGN=left WIDTH="98%">
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-bd9a.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<FONT FACE="Arial,Helvetica" SIZE=-2>
Freshly brewed Java API Documentation automatically generated with <A HREF="http://www.ualberta.ca/~tgee/polardoc">polardoc</A> Version 1.0.7
<BR>
</FONT>
</BODY>
</HTML>
