<!-- Automatically generated with polardoc Version 1.0.7 on Fri Aug 23 12:32:12 PDT 2002 -->
<!-- com.jconfig.nix.AppUtilsNixI | Do not remove or edit this line! -->
<HTML>
<HEAD>
<TITLE>
  Interface com.jconfig.nix.AppUtilsNixI
</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" LINK="#0000FF" VLINK="#0000FF" ALINK="#0000FF">
<BR>
<P>

<TABLE WIDTH="100%" BGCOLOR="#FFFFBB"><TR><TD WIDTH="100%">

<B>
<A HREF="../../../readme.html"><FONT SIZE="2">Main Page</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../../overview.html"><FONT SIZE="2">Cookbook/Overview</FONT></A>

&nbsp; &nbsp; <A HREF="../../../imagemeister.html"><FONT SIZE="2">ImageMeister</FONT></A>

&nbsp; &nbsp; <A HREF="../../../jcprops.html"><FONT SIZE="2">the jcprops file</FONT></A>

&nbsp; &nbsp; <A HREF="../../../licensing.html"><FONT SIZE="2">Licensing</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Binary Installation & Configuration</FONT></I><B> 
[
<A HREF="../../../wininfo.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../../../macinfo.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../../../nixinfo.html"><FONT SIZE="2">Nix</FONT></A> &middot;
<A HREF="../../../osxinfo.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../../../changes.html"><FONT SIZE="2">Changes</FONT></A>


<BR>
&nbsp; &nbsp; <A HREF="../../../docs/pak-76b1.htm"><FONT SIZE="2">Public API</FONT></A>

<BR>
&nbsp; &nbsp; <A HREF="../../readme.html"><FONT SIZE="2">Source Code Main Page</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Java</FONT></I><B> 
[
<A HREF="pak-76b1.htm"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="pak-bd9a.htm"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="pak-545a.htm"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="pak-c96f.htm"><FONT SIZE="2">Nix</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Native Code</FONT></I><B>
[
<A HREF="../cdocs/common/Common.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../cdocs/win/Windows.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../cdocs/mac/Mac.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../cdocs/nix/Linux.html"><FONT SIZE="2">Nix</FONT></A>
]

&nbsp; &nbsp; <A HREF="../manifest.html"><FONT SIZE="2">Manifest</FONT></A>

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Native Code Overviews</FONT></I><B>
[
<A HREF="../commonnative.html"><FONT SIZE="2">Common</FONT></A> &middot; 
<A HREF="../winnative.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macnative.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixnative.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../strings.html"><FONT SIZE="2">Strings</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Macros</FONT></I><B>
[
<A HREF="../macros.html"><FONT SIZE="2">General</FONT></A> &middot; 
<A HREF="../nativemacros.html"><FONT SIZE="2">Native Macros</FONT></A> 
]

<BR>
</B><I>
&nbsp; &nbsp; &nbsp; &nbsp; <FONT SIZE="2">Walkthroughs</FONT></I><B> 
[
<A HREF="../overview_init.html"><FONT SIZE="2">Java only</FONT></A> &middot; 
<A HREF="../overview_monitors.html"><FONT SIZE="2">Java and native</FONT></A> 
]

</B><I>
&nbsp; &nbsp; <FONT SIZE="2">Building</FONT></I><B> 
[
<A HREF="../wininstall.html"><FONT SIZE="2">Win</FONT></A> &middot; 
<A HREF="../macinstall.html"><FONT SIZE="2">Mac</FONT></A> &middot; 
<A HREF="../nixinstall.html"><FONT SIZE="2">Nix</FONT></A> &middot; 
<A HREF="../osxinstall.html"><FONT SIZE="2">OSX</FONT></A> 
]

&nbsp; &nbsp; <A HREF="../distribution.html"><FONT SIZE="2">Distribution Issues</FONT></A>

<BR>

</TD></TR></TABLE>





<A NAME="_top_"></A>
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-c96f.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<HR SIZE=1 ALIGN=left WIDTH="98%">
<B><FONT FACE="Arial,Helvetica" SIZE=+2>
     Interface com.jconfig.nix.AppUtilsNixI
</FONT></B>
<P><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Summary</B></FONT></TD> </TR> </TABLE>
<A NAME="_Summary_"></A>
<PRE>
interface  <STRONG>AppUtilsNixI</STRONG>
{
          // Fields 37
     public static final int <A HREF="#DATE_ACC_OFFSET">DATE_ACC_OFFSET</A>;
     public static final int <A HREF="#DATE_CRE_OFFSET">DATE_CRE_OFFSET</A>;
     public static final int <A HREF="#DATE_MOD_OFFSET">DATE_MOD_OFFSET</A>;
     public static final String <A HREF="#copyrightString">copyrightString</A>;
     public static final int <A HREF="#kDateBundleArrayLen">kDateBundleArrayLen</A>;
     public static final int <A HREF="#kGetMntEntOffs_dir">kGetMntEntOffs_dir</A>;
     public static final int <A HREF="#kGetMntEntOffs_fsname">kGetMntEntOffs_fsname</A>;
     public static final int <A HREF="#kGetMntEntOffs_opts">kGetMntEntOffs_opts</A>;
     public static final int <A HREF="#kGetMntEntOffs_type">kGetMntEntOffs_type</A>;
     public static final int <A HREF="#kGetMntEntRetArrayLen">kGetMntEntRetArrayLen</A>;
     public static final int <A HREF="#kMonitorInfoNumInts">kMonitorInfoNumInts</A>;
     public static final int <A HREF="#kResolveLinkFileNoUI">kResolveLinkFileNoUI</A>;
     public static final int <A HREF="#kResolveLinkFileUI">kResolveLinkFileUI</A>;
     public static final int <A HREF="#kStandardFileAttrsMask">kStandardFileAttrsMask</A>;
     public static final int <A HREF="#kStandardVolumeAttrsMask">kStandardVolumeAttrsMask</A>;
     public static final int <A HREF="#kStatFSOffs_bavail">kStatFSOffs_bavail</A>;
     public static final int <A HREF="#kStatFSOffs_bfree">kStatFSOffs_bfree</A>;
     public static final int <A HREF="#kStatFSOffs_blocks">kStatFSOffs_blocks</A>;
     public static final int <A HREF="#kStatFSOffs_bsize">kStatFSOffs_bsize</A>;
     public static final int <A HREF="#kStatFSOffs_ffree">kStatFSOffs_ffree</A>;
     public static final int <A HREF="#kStatFSOffs_files">kStatFSOffs_files</A>;
     public static final int <A HREF="#kStatFSOffs_fsid0">kStatFSOffs_fsid0</A>;
     public static final int <A HREF="#kStatFSOffs_fsid1">kStatFSOffs_fsid1</A>;
     public static final int <A HREF="#kStatFSOffs_type">kStatFSOffs_type</A>;
     public static final int <A HREF="#kStatFSRetArrayLen">kStatFSRetArrayLen</A>;
     public static final int <A HREF="#kStatOffs_blksize">kStatOffs_blksize</A>;
     public static final int <A HREF="#kStatOffs_blocks">kStatOffs_blocks</A>;
     public static final int <A HREF="#kStatOffs_dev">kStatOffs_dev</A>;
     public static final int <A HREF="#kStatOffs_gid">kStatOffs_gid</A>;
     public static final int <A HREF="#kStatOffs_ino">kStatOffs_ino</A>;
     public static final int <A HREF="#kStatOffs_mode">kStatOffs_mode</A>;
     public static final int <A HREF="#kStatOffs_nlink">kStatOffs_nlink</A>;
     public static final int <A HREF="#kStatOffs_rdev">kStatOffs_rdev</A>;
     public static final int <A HREF="#kStatOffs_size">kStatOffs_size</A>;
     public static final int <A HREF="#kStatOffs_uid">kStatOffs_uid</A>;
     public static final int <A HREF="#kStatRetArrayLen">kStatRetArrayLen</A>;
     public static final int <A HREF="#kUnused">kUnused</A>;

          // Methods 35
     public abstract int <A HREF="#createFileAlias(java.lang.String, java.lang.String, int)">createFileAlias</A>(String, String, int);
     public abstract int <A HREF="#createVolumeAlias(java.lang.String, java.lang.String, int)">createVolumeAlias</A>(String, String, int);
     public abstract String[] <A HREF="#findAppsByExtension(java.lang.String, int, int)">findAppsByExtension</A>(String, int, int);
     public abstract String[] <A HREF="#findAppsByName(java.lang.String, int, int)">findAppsByName</A>(String, int, int);
     public abstract int <A HREF="#getAllMonitorInfo(int[], int, int[])">getAllMonitorInfo</A>(int[], int, int[]);
     public abstract int <A HREF="#getDriveDisplayName(java.lang.String, java.lang.String[])">getDriveDisplayName</A>(String, String[]);
     public abstract int <A HREF="#getExecutableType(java.lang.String, int[])">getExecutableType</A>(String, int[]);
     public abstract int <A HREF="#getExtIcon(java.lang.String, int, int, int, int, int, int[])">getExtIcon</A>(String, int, int, int, int, int, int[]);
     public abstract int <A HREF="#getFileAttributes(java.lang.String, int[])">getFileAttributes</A>(String, int[]);
     public abstract int <A HREF="#getFileAttributesMask(java.lang.String, int[])">getFileAttributesMask</A>(String, int[]);
     public abstract int <A HREF="#getFileIcon(java.lang.String, boolean, int, int, int, int, int, int[])">getFileIcon</A>(String, boolean, int, int, int, int, int, int[]);
     public abstract int <A HREF="#getMainMonitorInfo(int[])">getMainMonitorInfo</A>(int[]);
     public abstract int <A HREF="#getMntEnt(java.lang.String[], int, int[])">getMntEnt</A>(String[], int, int[]);
     public abstract int <A HREF="#getVolumeFlags(java.lang.String, int[])">getVolumeFlags</A>(String, int[]);
     public abstract int <A HREF="#getVolumeIcon(java.lang.String, int, int, int, int, int, int[])">getVolumeIcon</A>(String, int, int, int, int, int, int[]);
     public abstract int <A HREF="#getVolumeLabel(java.lang.String, java.lang.String[])">getVolumeLabel</A>(String, String[]);
     public abstract int <A HREF="#getVolumeMaxFileNameLength(java.lang.String, int[])">getVolumeMaxFileNameLength</A>(String, int[]);
     public abstract int <A HREF="#getVolumeReadFlagsMask(java.lang.String, int[])">getVolumeReadFlagsMask</A>(String, int[]);
     public abstract int <A HREF="#getVolumeReferenceNumber(java.lang.String, int[])">getVolumeReferenceNumber</A>(String, int[]);
     public abstract int <A HREF="#getVolumes(int, int[], java.lang.String[])">getVolumes</A>(int, int[], String[]);
     public abstract boolean <A HREF="#isDrivePath(java.io.File)">isDrivePath</A>(File);
     public abstract boolean <A HREF="#isDriveString(java.lang.String)">isDriveString</A>(String);
     public abstract boolean <A HREF="#isLinkFile(java.io.File)">isLinkFile</A>(File);
     public abstract int <A HREF="#launchApp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int[], int, java.lang.String[])">launchApp</A>(String, String, String, String, int[], int, String[]);
     public abstract int <A HREF="#launchURL(java.lang.String, int, java.lang.String[])">launchURL</A>(String, int, String[]);
     public abstract int <A HREF="#lstat(java.lang.String, int[], int[])">lstat</A>(String, int[], int[]);
     public abstract int <A HREF="#moveApp(int[], int, int)">moveApp</A>(int[], int, int);
     public abstract String <A HREF="#pathToDriveName(java.io.File)">pathToDriveName</A>(File);
     public abstract int <A HREF="#quitApp(int[], int)">quitApp</A>(int[], int);
     public abstract int <A HREF="#readLink(java.lang.String, java.lang.String[])">readLink</A>(String, String[]);
     public abstract int <A HREF="#resolveLinkFile(java.lang.String, java.lang.String[], int)">resolveLinkFile</A>(String, String[], int);
     public abstract int <A HREF="#setVolumeLabel(java.lang.String, java.lang.String)">setVolumeLabel</A>(String, String);
     public abstract int <A HREF="#stat(java.lang.String, int[], int[])">stat</A>(String, int[], int[]);
     public abstract int <A HREF="#statFS(java.lang.String, int[])">statFS</A>(String, int[]);
     public abstract int <A HREF="#verifyNativeAppData(int[])">verifyNativeAppData</A>(int[]);
}
</PRE>
<P>
<DL>
<P>
This is a preliminary interface derived from AppUtilsMSVM.

<P>
It is implemented by AppUtilsNixLinux (for Linux) and AppUtilsNixPlain (for all other Unix systems)
<P>
<DT><B>Author:</B>
<DD>
Copyright (c) 1997-2002 Samizdat Productions. All Rights Reserved.

</DL>
<P>
<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Cross Reference</B></FONT></TD> </TR> </TABLE>
<BR><DL>
<DT><B>Implemented By: </B>
<DD><A HREF="pow01415.htm">AppUtilsNixPlain</A><P>
</DL><BR>
<BR><BR>
<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Fields</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="copyrightString"><FONT COLOR="#0000FF">&middot;</FONT> copyrightString</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final String copyrightString
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kUnused"><FONT COLOR="#0000FF">&middot;</FONT> kUnused</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kUnused
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kDateBundleArrayLen"><FONT COLOR="#0000FF">&middot;</FONT> kDateBundleArrayLen</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kDateBundleArrayLen
</PRE>
<BLOCKQUOTE>
<P>
The stat() and lstat() methods are passed
an array of java ints, into which the native code puts the modification,
creation and access dates. Each date takes 6 ints: year, month, day,
hour, minute, and second. These define the total length of the jint array,
and the offset of each date.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="DATE_MOD_OFFSET"><FONT COLOR="#0000FF">&middot;</FONT> DATE_MOD_OFFSET</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int DATE_MOD_OFFSET
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="DATE_CRE_OFFSET"><FONT COLOR="#0000FF">&middot;</FONT> DATE_CRE_OFFSET</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int DATE_CRE_OFFSET
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="DATE_ACC_OFFSET"><FONT COLOR="#0000FF">&middot;</FONT> DATE_ACC_OFFSET</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int DATE_ACC_OFFSET
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_type"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_type</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_type
</PRE>
<BLOCKQUOTE>
<P>
The statFS() method is passed
an array of ints, into which the native code information on a file system.
These constants define the total length of the array, and the offset of each item.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_bsize"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_bsize</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_bsize
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_blocks"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_blocks</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_blocks
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_bfree"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_bfree</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_bfree
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_bavail"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_bavail</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_bavail
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_files"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_files</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_files
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_ffree"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_ffree</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_ffree
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_fsid0"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_fsid0</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_fsid0
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSOffs_fsid1"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSOffs_fsid1</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSOffs_fsid1
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatFSRetArrayLen"><FONT COLOR="#0000FF">&middot;</FONT> kStatFSRetArrayLen</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatFSRetArrayLen
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kGetMntEntOffs_fsname"><FONT COLOR="#0000FF">&middot;</FONT> kGetMntEntOffs_fsname</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kGetMntEntOffs_fsname
</PRE>
<BLOCKQUOTE>
<P>
The getMntEnt() method is passed
an array of Strings, into which the native code information on a file system.
These constants define the total length of the array, and the offset of each item.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kGetMntEntOffs_dir"><FONT COLOR="#0000FF">&middot;</FONT> kGetMntEntOffs_dir</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kGetMntEntOffs_dir
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kGetMntEntOffs_type"><FONT COLOR="#0000FF">&middot;</FONT> kGetMntEntOffs_type</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kGetMntEntOffs_type
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kGetMntEntOffs_opts"><FONT COLOR="#0000FF">&middot;</FONT> kGetMntEntOffs_opts</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kGetMntEntOffs_opts
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kGetMntEntRetArrayLen"><FONT COLOR="#0000FF">&middot;</FONT> kGetMntEntRetArrayLen</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kGetMntEntRetArrayLen
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_dev"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_dev</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_dev
</PRE>
<BLOCKQUOTE>
<P>
The stat() method is passed
an array of ints, into which the native code information on a file.
These constants define the total length of the array, and the offset of each item.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_ino"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_ino</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_ino
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_mode"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_mode</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_mode
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_nlink"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_nlink</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_nlink
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_uid"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_uid</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_uid
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_gid"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_gid</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_gid
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_rdev"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_rdev</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_rdev
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_size"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_size</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_size
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_blksize"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_blksize</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_blksize
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatOffs_blocks"><FONT COLOR="#0000FF">&middot;</FONT> kStatOffs_blocks</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatOffs_blocks
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStatRetArrayLen"><FONT COLOR="#0000FF">&middot;</FONT> kStatRetArrayLen</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStatRetArrayLen
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kMonitorInfoNumInts"><FONT COLOR="#0000FF">&middot;</FONT> kMonitorInfoNumInts</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kMonitorInfoNumInts
</PRE>
<BLOCKQUOTE>
<P>
Used in retrieving monitor information; see	the 'getAllMonitorInfo' method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kResolveLinkFileNoUI"><FONT COLOR="#0000FF">&middot;</FONT> kResolveLinkFileNoUI</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kResolveLinkFileNoUI
</PRE>
<BLOCKQUOTE>
<P>
See the 'resolveLinkFile' method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kResolveLinkFileUI"><FONT COLOR="#0000FF">&middot;</FONT> kResolveLinkFileUI</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kResolveLinkFileUI
</PRE>
<BLOCKQUOTE>
<P>
See the 'resolveLinkFile' method.
<P>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStandardVolumeAttrsMask"><FONT COLOR="#0000FF">&middot;</FONT> kStandardVolumeAttrsMask</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStandardVolumeAttrsMask
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3> <A NAME="kStandardFileAttrsMask"><FONT COLOR="#0000FF">&middot;</FONT> kStandardFileAttrsMask</A></H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public static final int kStandardFileAttrsMask
</PRE>
<BLOCKQUOTE>
<P> </BLOCKQUOTE>

<P>

<BR><TABLE BGCOLOR="#00ccff" WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD><FONT FACE="arial,helvetica" SIZE=+1><B>&nbsp;&nbsp;Methods</B></FONT></TD> </TR> </TABLE>
<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMntEnt"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getMntEnt(java.lang.String[], int, int[])">getMntEnt</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getMntEnt(String[] retQuads, 
                                 int maxToReturn, 
                                 int[] numReturned) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls the Unix getmntent() routine to get a list of mounted file systems.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> retQuads</I></TD> <TD>on return, 4 strings about each file system will be stored in this
		array, corresponding to the following fields of the 'mntent' struct: mnt_fsname, mnt_dir, mnt_type, and mnt_opts</TD></TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>the maximum number to return. the length of retQuads should be 4 times this value</TD></TR>
<TR VALIGN=TOP> <TD><I> numReturned</I></TD> <TD>the number of file systems on which information is returned.
		The number of strings in 'retQuads' will be 4 times this number</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="statFS"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="statFS(java.lang.String, int[])">statFS</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int statFS(String fileName, 
                              int[] retInts) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls the Unix statfs() routine to return information on the file system containing the given file
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fileName</I></TD> <TD>the full path of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> retInts</I></TD> <TD>on exit, stats on the file system will be placed at offsets defined by the kStatFSOffs_XXX constants.
This array must have at least kStatFSRetArrayLen elements.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="stat"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="stat(java.lang.String, int[], int[])">stat</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int stat(String fileName, 
                            int[] retArray, 
                            int[] datesArray) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls the Unix stat() routine to return information on the given file
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fileName</I></TD> <TD>the full path of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> retArray</I></TD> <TD>on exit, stats on the file will be placed at offsets defined by the kStatOffs_XXX constants.
This array must have at least kStatRetArrayLen elements.</TD></TR>
<TR VALIGN=TOP> <TD><I> datesArray</I></TD> <TD>on exit, stats on the file system will be placed at offsets defined by the kXXXDateOffset constants.
This array must have at least kDateBundleArrayLen elements.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="lstat"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="lstat(java.lang.String, int[], int[])">lstat</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int lstat(String fileName, 
                             int[] retArray, 
                             int[] datesArray) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls the Unix lstat() routine to return information on the given file
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fileName</I></TD> <TD>the full path of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> retArray</I></TD> <TD>on exit, stats on the file will be placed at offsets defined by the kStatOffs_XXX constants.
This array must have at least kStatRetArrayLen elements.</TD></TR>
<TR VALIGN=TOP> <TD><I> datesArray</I></TD> <TD>on exit, stats on the file system will be placed at offsets defined by the kXXXDateOffset constants.
This array must have at least kDateBundleArrayLen elements.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="readLink"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="readLink(java.lang.String, java.lang.String[])">readLink</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int readLink(String linkFilePath, 
                                String[] retPath) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Calls the Unix readlink() routine to resolve a symbolic link.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> linkFilePath</I></TD> <TD>the full path (which may be a symbolic link) to resolve</TD></TR>
<TR VALIGN=TOP> <TD><I> retPath</I></TD> <TD>on return, contains the full path of the resolved file</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileIcon"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFileIcon(java.lang.String, boolean, int, int, int, int, int, int[])">getFileIcon</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getFileIcon(String fullPath, 
                                   boolean bIsDir, 
                                   int whichIcon, 
                                   int w, 
                                   int h, 
                                   int xform, 
                                   int align, 
                                   int[] pData) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the icon for a file.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fullPath</I></TD> <TD>full path of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> bIsDir</I></TD> <TD>is this a directory?</TD></TR>
<TR VALIGN=TOP> <TD><I> whichIcon</I></TD> <TD>either IconBundle.ICON_LARGE or IconBundle.ICON_SMALL</TD></TR>
<TR VALIGN=TOP> <TD><I> w</I></TD> <TD>the width of the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> h</I></TD> <TD>the height of the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> xform</I></TD> <TD>any transformation to be applied to the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> align</I></TD> <TD>any alignment to be applied to the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> pData</I></TD> <TD>an array of ints which will hold the Java format ARGB data for the icon
This must have at least w * h elements</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getExtIcon"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getExtIcon(java.lang.String, int, int, int, int, int, int[])">getExtIcon</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getExtIcon(String ext, 
                                  int whichIcon, 
                                  int w, 
                                  int h, 
                                  int xform, 
                                  int align, 
                                  int[] pData) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the icon for files ending in the given extension.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> ext</I></TD> <TD>the extension</TD></TR>
<TR VALIGN=TOP> <TD><I> whichIcon</I></TD> <TD>either IconBundle.ICON_LARGE or IconBundle.ICON_SMALL</TD></TR>
<TR VALIGN=TOP> <TD><I> w</I></TD> <TD>the width of the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> h</I></TD> <TD>the height of the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> xform</I></TD> <TD>any transformation to be applied to the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> align</I></TD> <TD>any alignment to tbe applied to the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> pData</I></TD> <TD>an array of ints which will hold the Java format ARGB data for the icon
This must have at least w * h elements</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumeIcon"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumeIcon(java.lang.String, int, int, int, int, int, int[])">getVolumeIcon</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumeIcon(String driveName, 
                                     int whichIcon, 
                                     int w, 
                                     int h, 
                                     int xform, 
                                     int align, 
                                     int[] pData) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the icon for a volume

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the voluem</TD></TR>
<TR VALIGN=TOP> <TD><I> whichIcon</I></TD> <TD>either IconBundle.ICON_LARGE or IconBundle.ICON_SMALL</TD></TR>
<TR VALIGN=TOP> <TD><I> w</I></TD> <TD>the width of the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> h</I></TD> <TD>the height of the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> xform</I></TD> <TD>any transformation to be applied to the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> align</I></TD> <TD>any alignment to tbe applied to the icon</TD></TR>
<TR VALIGN=TOP> <TD><I> pData</I></TD> <TD>an array of ints which will hold the Java format ARGB data for the icon
This must have at least w * h elements</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="createVolumeAlias"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="createVolumeAlias(java.lang.String, java.lang.String, int)">createVolumeAlias</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int createVolumeAlias(String driveName, 
                                         String newAliasPath, 
                                         int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Create an alias to a volume

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the target</TD></TR>
<TR VALIGN=TOP> <TD><I> newAliasPath</I></TD> <TD>the full path to the new alias</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="createFileAlias"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="createFileAlias(java.lang.String, java.lang.String, int)">createFileAlias</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int createFileAlias(String targetPath, 
                                       String newAliasPath, 
                                       int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Create an alias to a file

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> targetPath</I></TD> <TD>full path of the target</TD></TR>
<TR VALIGN=TOP> <TD><I> newAliasPath</I></TD> <TD>the full path to the new alias</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="isLinkFile"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="isLinkFile(java.io.File)">isLinkFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract boolean isLinkFile(File fl) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Is 'fl' a symbolic link?
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="isDrivePath"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="isDrivePath(java.io.File)">isDrivePath</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract boolean isDrivePath(File fl) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Is 'fl' a volume?
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="pathToDriveName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="pathToDriveName(java.io.File)">pathToDriveName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract String pathToDriveName(File fl) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the volume which contains 'fl', or null if that information can't be obtained.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="isDriveString"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="isDriveString(java.lang.String)">isDriveString</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract boolean isDriveString(String drivePath) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Is 'drivePath' a volume path, i.e., '/'?
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumes"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumes(int, int[], java.lang.String[])">getVolumes</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumes(int maxToReturn, 
                                  int[] numReturned, 
                                  String[] driveNames) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Retrieve a list of the mounted volumes.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>the maximum number of volumes to return</TD></TR>
<TR VALIGN=TOP> <TD><I> numReturned</I></TD> <TD>on return, the first element will contain the number of volumes in 'driveNames'</TD></TR>
<TR VALIGN=TOP> <TD><I> driveNames</I></TD> <TD>on return, contains an array of Strings representing each drive. Must have
at least 'maxToReturn' elements.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumeLabel"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumeLabel(java.lang.String, java.lang.String[])">getVolumeLabel</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumeLabel(String driveName, 
                                      String[] label) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Get the volume label
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> label</I></TD> <TD>the drive label will be put at label[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumeMaxFileNameLength"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumeMaxFileNameLength(java.lang.String, int[])">getVolumeMaxFileNameLength</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumeMaxFileNameLength(String driveName, 
                                                  int[] nameLen) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Get the maximum file name length of a volume.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> nameLen</I></TD> <TD>the name length will be placed at nameLen[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumeReferenceNumber"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumeReferenceNumber(java.lang.String, int[])">getVolumeReferenceNumber</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumeReferenceNumber(String driveName, 
                                                int[] refNum) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Get a platform-dependent number for a volume, such as a reference number.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> nameLen</I></TD> <TD>the reference number will be placed at refNum[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="setVolumeLabel"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="setVolumeLabel(java.lang.String, java.lang.String)">setVolumeLabel</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int setVolumeLabel(String driveName, 
                                      String newLabel) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Sets the volume label of a drive

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> newLabel</I></TD> <TD>the new label</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getDriveDisplayName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getDriveDisplayName(java.lang.String, java.lang.String[])">getDriveDisplayName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getDriveDisplayName(String driveName, 
                                           String[] displayName) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the display name of a drive. This is the name that would be displayed to the user.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> displayName</I></TD> <TD>the display name will be placed at displayName[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumeFlags"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumeFlags(java.lang.String, int[])">getVolumeFlags</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumeFlags(String driveName, 
                                      int[] flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the flags for a volume. See DiskVolume for a description of the flags

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>the flags will be placed at flags[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getVolumeReadFlagsMask"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getVolumeReadFlagsMask(java.lang.String, int[])">getVolumeReadFlagsMask</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getVolumeReadFlagsMask(String driveName, 
                                              int[] flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the read flags for a volume. See DiskVolume for a description of this.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> driveName</I></TD> <TD>the drive name</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>the flags will be placed at flags[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="resolveLinkFile"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="resolveLinkFile(java.lang.String, java.lang.String[], int)">resolveLinkFile</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int resolveLinkFile(String linkFilePath, 
                                       String[] retPath, 
                                       int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Resolves a symbolic link.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> linkFilePath</I></TD> <TD>the full path of the .lnk file</TD></TR>
<TR VALIGN=TOP> <TD><I> retPath</I></TD> <TD>the resolved full path will be placed at retPath[ 0 ]</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>either kResolveLinkFileNoUI or kResolveLinkFileUI</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getAllMonitorInfo"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getAllMonitorInfo(int[], int, int[])">getAllMonitorInfo</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getAllMonitorInfo(int[] monitorInfo, 
                                         int maxToReturn, 
                                         int[] numReturned) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets information on all the user's monitors. 
Info on each monitor will be placed into the 'monitorInfo' int array. Each monitor consumes 'kMonitorInfoNumInts'
elements of this array. The format of each monitor is as described in the 'getMainMonitorInfo' method.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> montitorInfo</I></TD> <TD>must have at least 'maxToReturn' * kMonitorInfoNumInts elements.</TD></TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>the maximum number of monitors to return info on.</TD></TR>
<TR VALIGN=TOP> <TD><I> numReturned</I></TD> <TD>the number of monitors returned will be placed at numReturned[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getMainMonitorInfo"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getMainMonitorInfo(int[])">getMainMonitorInfo</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getMainMonitorInfo(int[] monitorInfo) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Stores information on the user's main monitor into the 'monitorInfo' array.
This array must have at least 'kMonitorInfoNumInts' elements.
The information on the monitor is stored at the 'kOffs???' offsets defined in 'MonitorMSVM.java':

<BR><B>WANC</B><BR>
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getExecutableType"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getExecutableType(java.lang.String, int[])">getExecutableType</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getExecutableType(String fullPath, 
                                         int[] val) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the type of the given executable.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fullPath</I></TD> <TD>the full path of the executable</TD></TR>
<TR VALIGN=TOP> <TD><I> val</I></TD> <TD>the type will be placed at val[ 0 ], and will be one of the k???Exe values defined in 'AppFile.java':
'AF_W32', etc.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileAttributes"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFileAttributes(java.lang.String, int[])">getFileAttributes</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getFileAttributes(String fullPath, 
                                         int[] val) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Gets the attributes of the given file.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fullPath</I></TD> <TD>the full path of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> val</I></TD> <TD>the attributes will be placed at val[ 0 ], and will be one of the attributes defined in 'DiskFile.java':
'FILE_EXECUTABLE', 'FILE_DIR', etc.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="getFileAttributesMask"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="getFileAttributesMask(java.lang.String, int[])">getFileAttributesMask</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int getFileAttributesMask(String fullPath, 
                                             int[] val) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Indicates which bits of the value returned from getFileAttributes are valid.
See that method for more information.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> fullPath</I></TD> <TD>the full path of the file</TD></TR>
<TR VALIGN=TOP> <TD><I> val</I></TD> <TD>the mask will be placed at val[ 0 ]</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="launchApp"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="launchApp(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int[], int, java.lang.String[])">launchApp</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int launchApp(String appPath, 
                                 String verb, 
                                 String regKey, 
                                 String commandLine, 
                                 int[] retData, 
                                 int numArgs, 
                                 String[] args) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Launches the given app with a set of arguments.
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="launchURL"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="launchURL(java.lang.String, int, java.lang.String[])">launchURL</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int launchURL(String url, 
                                 int flags, 
                                 String[] preferredBrowsers) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Launches the given URL.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> url</I></TD> <TD>the fully qualified URL</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>currently ignored</TD></TR>
<TR VALIGN=TOP> <TD><I> preferredBrowsers</I></TD> <TD>currently ignored</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="findAppsByName"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="findAppsByName(java.lang.String, int, int)">findAppsByName</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract String[] findAppsByName(String appName, 
                                           int maxToReturn, 
                                           int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the full paths of the apps which match the given name.
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> appName</I></TD> <TD>the string to search for.</TD></TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>indicates the maximum number of AppFiles to return. NOTE: this is used as
a hint only; the actual array size may be greater or less than this.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>the lower two bits of this int indicate the level of searching which should be
performed. 0 indicates only standard searching; 1, 2, and 3 indicate increasingly full searching
The remaining bits of this int are reserved, and should be set to zero.</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="findAppsByExtension"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="findAppsByExtension(java.lang.String, int, int)">findAppsByExtension</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract String[] findAppsByExtension(String ext, 
                                                int maxToReturn, 
                                                int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Returns the full paths of the apps which are used to launch files with the given extension
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> ext</I></TD> <TD>the extension being searched for: ".txt"</TD></TR>
<TR VALIGN=TOP> <TD><I> maxToReturn</I></TD> <TD>the maximum number to return. This is a hint only.</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>reserved; set to 0</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="verifyNativeAppData"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="verifyNativeAppData(int[])">verifyNativeAppData</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int verifyNativeAppData(int[] appData) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Indicates if the given process is still running.

<BR><B>WANC</B><BR>
<P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="quitApp"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="quitApp(int[], int)">quitApp</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int quitApp(int[] appData, 
                               int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Quits the given process.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> appData</I></TD> <TD>identifies the process</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>ignored; set to 0</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>

<TABLE WIDTH=100% CELLSPACING=0 CELLPADDING=1 BORDER=0> <TR> <TD WIDTH=80%>
<BR><H3><A NAME="moveApp"><FONT COLOR="#FF0000">&middot;</FONT></A>
<A NAME="moveApp(int[], int, int)">moveApp</A> </H3>
</TD> <TD ALIGN=right WIDTH=20%> <FONT SIZE="-2"><A HREF="#_Summary_">Summary</A> &nbsp;|&nbsp; <A HREF=#_top_>Top</A></FONT> </TD> </TR> </TABLE>
<PRE>
   public abstract int moveApp(int[] appData, 
                               int selector, 
                               int flags) </PRE>
<BLOCKQUOTE>
<DL>
<P>
Moves the given process.

<BR><B>WANC</B><BR>
<P>
<TABLE WIDTH="87%" BORDER=1 CELLPADDING=3 CELLSPACING=0> <TR VALIGN=TOP BGCOLOR="#CCCCCC"> <TD><B>Parameter</B></TD> <TD><B>Description</B></TD> </TR>
<TR VALIGN=TOP> <TD><I> appData</I></TD> <TD>identifies the process</TD></TR>
<TR VALIGN=TOP> <TD><I> selector</I></TD> <TD>one of the 'APP_MOVE_TOFRONT', etc. constants defined in AppProcess.java</TD></TR>
<TR VALIGN=TOP> <TD><I> flags</I></TD> <TD>ignored; set to 0</TD></TR>
</TABLE><P>
</DL>
</BLOCKQUOTE> <BR>


<HR SIZE=1 ALIGN=left WIDTH="98%">
<PRE>
<A HREF="packages.htm">All Packages</A>  <A HREF="pak-c96f.htm">This Package</A>  <A HREF="tree.htm">Class Hierarchy</A>  <A HREF="search.htm">Class Search</A>  <A HREF="index.htm">Index</A>
</PRE>
<FONT FACE="Arial,Helvetica" SIZE=-2>
Freshly brewed Java API Documentation automatically generated with <A HREF="http://www.ualberta.ca/~tgee/polardoc">polardoc</A> Version 1.0.7
<BR>
</FONT>
</BODY>
</HTML>
